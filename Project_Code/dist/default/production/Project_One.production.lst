

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Nov 23 09:41:38 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33  0000                     
    34                           ; Generated 23/03/2023 GMT
    35                           ; 
    36                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F4620 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     
    69                           	psect	idataCOMRAM
    70  0000'                    __pidataCOMRAM:
    71                           	callstack 0
    72                           
    73                           ;initializer for _port_registers
    74  0000' 80                 	db	128
    75  0001' 0F                 	db	15
    76  0002' 81                 	db	129
    77  0003' 0F                 	db	15
    78  0004' 82                 	db	130
    79  0005' 0F                 	db	15
    80  0006' 83                 	db	131
    81  0007' 0F                 	db	15
    82  0008' 84                 	db	132
    83  0009' 0F                 	db	15
    84                           
    85                           ;initializer for _lat_registers
    86  000A' 89                 	db	137
    87  000B' 0F                 	db	15
    88  000C' 8A                 	db	138
    89  000D' 0F                 	db	15
    90  000E' 8B                 	db	139
    91  000F' 0F                 	db	15
    92  0010' 8C                 	db	140
    93  0011' 0F                 	db	15
    94  0012' 8D                 	db	141
    95  0013' 0F                 	db	15
    96                           
    97                           ;initializer for _tris_registers
    98  0014' 92                 	db	146
    99  0015' 0F                 	db	15
   100  0016' 93                 	db	147
   101  0017' 0F                 	db	15
   102  0018' 94                 	db	148
   103  0019' 0F                 	db	15
   104  001A' 95                 	db	149
   105  001B' 0F                 	db	15
   106  001C' 96                 	db	150
   107  001D' 0F                 	db	15
   108                           
   109                           ;initializer for _lcd_2
   110  001E' 32                 	db	50
   111  001F' 3A                 	db	58
   112  0020' 03                 	db	3
   113  0021' 0B                 	db	11
   114  0022' 13                 	db	19
   115  0023' 1B                 	db	27
   116  0024' 23                 	db	35
   117  0025' 2B                 	db	43
   118  0026' 33                 	db	51
   119  0027' 3B                 	db	59
   120                           
   121                           ;initializer for _lcd_1
   122  0028' 02                 	db	2
   123  0029' 0A                 	db	10
   124  002A' 12                 	db	18
   125  002B' 1A                 	db	26
   126  002C' 22                 	db	34
   127  002D' 2A                 	db	42
   128                           
   129                           	psect	idataBANK0
   130  0000'                    __pidataBANK0:
   131                           	callstack 0
   132                           
   133                           ;initializer for _keypad_btn_values
   134  0000' 37                 	db	55
   135  0001' 00                 	db	0
   136  0002' 00                 	db	0
   137  0003' 38                 	db	56
   138  0004' 00                 	db	0
   139  0005' 00                 	db	0
   140  0006' 39                 	db	57
   141  0007' 00                 	db	0
   142  0008' 00                 	db	0
   143  0009' 2F                 	db	47
   144  000A' 00                 	db	0
   145  000B' 00                 	db	0
   146  000C' 34                 	db	52
   147  000D' 00                 	db	0
   148  000E' 00                 	db	0
   149  000F' 35                 	db	53
   150  0010' 00                 	db	0
   151  0011' 00                 	db	0
   152  0012' 36                 	db	54
   153  0013' 00                 	db	0
   154  0014' 00                 	db	0
   155  0015' 2A                 	db	42
   156  0016' 00                 	db	0
   157  0017' 00                 	db	0
   158  0018' 31                 	db	49
   159  0019' 00                 	db	0
   160  001A' 00                 	db	0
   161  001B' 32                 	db	50
   162  001C' 00                 	db	0
   163  001D' 00                 	db	0
   164  001E' 33                 	db	51
   165  001F' 00                 	db	0
   166  0020' 00                 	db	0
   167  0021' 2B                 	db	43
   168  0022' 00                 	db	0
   169  0023' 00                 	db	0
   170  0024' 23                 	db	35
   171  0025' 00                 	db	0
   172  0026' 00                 	db	0
   173  0027' 30                 	db	48
   174  0028' 00                 	db	0
   175  0029' 00                 	db	0
   176  002A' 3D                 	db	61
   177  002B' 00                 	db	0
   178  002C' 00                 	db	0
   179  002D' 2D                 	db	45
   180  002E' 00                 	db	0
   181  002F' 00                 	db	0
   182  0000                     _PORTE	set	3972
   183  0000                     _PORTD	set	3971
   184  0000                     _PORTC	set	3970
   185  0000                     _PORTB	set	3969
   186  0000                     _PORTA	set	3968
   187  0000                     _LATA	set	3977
   188  0000                     _TRISA	set	3986
   189  0000                     _TRISE	set	3990
   190  0000                     _TRISD	set	3989
   191  0000                     _TRISC	set	3988
   192  0000                     _TRISB	set	3987
   193  0000                     _LATE	set	3981
   194  0000                     _LATD	set	3980
   195  0000                     _LATC	set	3979
   196  0000                     _LATB	set	3978
   197                           
   198                           	psect	smallconst
   199  0000'                    __psmallconst:
   200                           	callstack 0
   201  0000' 00                 	db	0
   202  0001'                    STR_1:
   203  0001' 41                 	db	65	;'A'
   204  0002' 79                 	db	121	;'y'
   205  0003' 61                 	db	97	;'a'
   206  0004' 00                 	db	0
   207  0005'                    STR_2:
   208  0005' 61                 	db	97	;'a'
   209  0006' 79                 	db	121	;'y'
   210  0007' 61                 	db	97	;'a'
   211  0008' 00                 	db	0
   212  0009' 00                 	db	0	; dummy byte at the end
   213  0000                     
   214                           ; #config settings
   215                           
   216                           	psect	cinit
   217  0000'                    __pcinit:
   218                           	callstack 0
   219  0000'                    start_initialization:
   220                           	callstack 0
   221  0000'                    __initialization:
   222                           	callstack 0
   223                           
   224                           ; Initialize objects allocated to BANK0 (48 bytes)
   225                           ; load TBLPTR registers with __pidataBANK0
   226  0000' 0E00'              	movlw	low __pidataBANK0
   227  0002' 6EF6               	movwf	tblptrl,c
   228  0004' 0E00'              	movlw	high __pidataBANK0
   229  0006' 6EF7               	movwf	tblptrh,c
   230  0008' 0E00'              	movlw	low (__pidataBANK0 shr (0+16))
   231  000A' 6EF8               	movwf	tblptru,c
   232  000C' EE00' F000'        	lfsr	0,__pdataBANK0
   233  0010' EE10 F030          	lfsr	1,48
   234  0014'                    copy_data0:
   235  0014' 0009               	tblrd		*+
   236  0016' CFF5 FFEE          	movff	tablat,postinc0
   237  001A' 50E5               	movf	postdec1,w,c
   238  001C' 50E1               	movf	fsr1l,w,c
   239  001E' E1FA               	bnz	copy_data0
   240                           
   241                           ; Initialize objects allocated to COMRAM (46 bytes)
   242                           ; load TBLPTR registers with __pidataCOMRAM
   243  0020' 0E00'              	movlw	low __pidataCOMRAM
   244  0022' 6EF6               	movwf	tblptrl,c
   245  0024' 0E00'              	movlw	high __pidataCOMRAM
   246  0026' 6EF7               	movwf	tblptrh,c
   247  0028' 0E00'              	movlw	low (__pidataCOMRAM shr (0+16))
   248  002A' 6EF8               	movwf	tblptru,c
   249  002C' EE00' F000'        	lfsr	0,__pdataCOMRAM
   250  0030' EE10 F02E          	lfsr	1,46
   251  0034'                    copy_data1:
   252  0034' 0009               	tblrd		*+
   253  0036' CFF5 FFEE          	movff	tablat,postinc0
   254  003A' 50E5               	movf	postdec1,w,c
   255  003C' 50E1               	movf	fsr1l,w,c
   256  003E' E1FA               	bnz	copy_data1
   257                           
   258                           ; Clear objects allocated to COMRAM (7 bytes)
   259  0040' EE00' F000'        	lfsr	0,__pbssCOMRAM
   260  0044' 0E07               	movlw	7
   261  0046'                    clear_0:
   262  0046' 6AEE               	clrf	postinc0,c
   263  0048' 06E8               	decf	wreg,f,c
   264  004A' E1FD               	bnz	clear_0
   265  004C'                    end_of_initialization:
   266                           	callstack 0
   267  004C'                    __end_of__initialization:
   268                           	callstack 0
   269  004C' 0100               	movlb	0
   270  004E' EF00' F000'        	goto	_main	;jump to C main() function
   271                           
   272                           	psect	bssCOMRAM
   273  0000'                    __pbssCOMRAM:
   274                           	callstack 0
   275  0000'                    Relay_Turn_OFF@F2885:
   276                           	callstack 0
   277  0000'                    	ds	1
   278  0001'                    Relay_Turn_ON@F2880:
   279                           	callstack 0
   280  0001'                    	ds	1
   281  0002'                    Relay_Initialize@F2875:
   282                           	callstack 0
   283  0002'                    	ds	1
   284  0003'                    led_toggle@F2896:
   285                           	callstack 0
   286  0003'                    	ds	1
   287  0004'                    led_turn_off@F2891:
   288                           	callstack 0
   289  0004'                    	ds	1
   290  0005'                    led_turn_on@F2886:
   291                           	callstack 0
   292  0005'                    	ds	1
   293  0006'                    led_initialize@F2881:
   294                           	callstack 0
   295  0006'                    	ds	1
   296                           
   297                           	psect	dataCOMRAM
   298  0000'                    __pdataCOMRAM:
   299                           	callstack 0
   300  0000'                    _port_registers:
   301                           	callstack 0
   302  0000'                    	ds	10
   303  000A'                    _lat_registers:
   304                           	callstack 0
   305  000A'                    	ds	10
   306  0014'                    _tris_registers:
   307                           	callstack 0
   308  0014'                    	ds	10
   309  001E'                    _lcd_2:
   310                           	callstack 0
   311  001E'                    	ds	10
   312  0028'                    _lcd_1:
   313                           	callstack 0
   314  0028'                    	ds	6
   315                           
   316                           	psect	dataBANK0
   317  0000'                    __pdataBANK0:
   318                           	callstack 0
   319  0000'                    _keypad_btn_values:
   320                           	callstack 0
   321  0000'                    	ds	48
   322                           
   323                           	psect	cstackCOMRAM
   324  0000'                    __pcstackCOMRAM:
   325                           	callstack 0
   326  0000'                    ?_lcd_send_enable_signal:
   327                           	callstack 0
   328  0000'                    gpio_pin_direction_intialize@pin_config:
   329                           	callstack 0
   330  0000'                    gpio_pin_write_logic@pin_config:
   331                           	callstack 0
   332                           
   333                           ; 2 bytes @ 0x0
   334  0000'                    	ds	2
   335  0002'                    ??_gpio_pin_direction_intialize:
   336  0002'                    gpio_pin_write_logic@logic:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0x2
   340  0002'                    	ds	1
   341  0003'                    ??_gpio_pin_write_logic:
   342                           
   343                           ; 1 bytes @ 0x3
   344  0003'                    	ds	5
   345  0008'                    gpio_pin_direction_intialize@ret:
   346                           	callstack 0
   347                           
   348                           ; 1 bytes @ 0x8
   349  0008'                    	ds	1
   350  0009'                    gpio_pin_write_logic@ret:
   351                           	callstack 0
   352                           
   353                           ; 1 bytes @ 0x9
   354  0009'                    	ds	1
   355  000A'                    gpio_pin_intialize@pin_config:
   356                           	callstack 0
   357  000A'                    send_4bit_data@lcd:
   358                           	callstack 0
   359  000A'                    lcd_4bit_send_enable_signal@lcd:
   360                           	callstack 0
   361  000A'                    lcd_8bit_send_enable_signal@lcd:
   362                           	callstack 0
   363                           
   364                           ; 2 bytes @ 0xA
   365  000A'                    	ds	2
   366  000C'                    ??_gpio_pin_intialize:
   367  000C'                    ??_lcd_4bit_send_enable_signal:
   368  000C'                    ??_lcd_8bit_send_enable_signal:
   369  000C'                    send_4bit_data@command:
   370                           	callstack 0
   371                           
   372                           ; 1 bytes @ 0xC
   373  000C'                    	ds	1
   374  000D'                    gpio_pin_intialize@ret:
   375                           	callstack 0
   376  000D'                    send_4bit_data@ret:
   377                           	callstack 0
   378  000D'                    lcd_4bit_send_enable_signal@ret:
   379                           	callstack 0
   380  000D'                    lcd_8bit_send_enable_signal@ret:
   381                           	callstack 0
   382                           
   383                           ; 1 bytes @ 0xD
   384  000D'                    	ds	1
   385  000E'                    lcd_4_bit_send_command@lcd:
   386                           	callstack 0
   387  000E'                    lcd_8_bit_send_command@lcd:
   388                           	callstack 0
   389  000E'                    lcd_8_bit_send_char_data@lcd:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0xE
   393  000E'                    	ds	2
   394  0010'                    lcd_4_bit_send_command@command:
   395                           	callstack 0
   396  0010'                    lcd_8_bit_send_command@command:
   397                           	callstack 0
   398  0010'                    lcd_8_bit_send_char_data@data:
   399                           	callstack 0
   400                           
   401                           ; 1 bytes @ 0x10
   402  0010'                    	ds	1
   403  0011'                    ??_lcd_8_bit_send_char_data:
   404  0011'                    ??_lcd_8_bit_send_command:
   405  0011'                    lcd_4_bit_send_command@ret:
   406                           	callstack 0
   407                           
   408                           ; 1 bytes @ 0x11
   409  0011'                    	ds	4
   410  0015'                    lcd_8_bit_send_command@ret:
   411                           	callstack 0
   412  0015'                    lcd_8_bit_send_char_data@ret:
   413                           	callstack 0
   414                           
   415                           ; 1 bytes @ 0x15
   416  0015'                    	ds	1
   417  0016'                    lcd_8_bit_send_command@l_command_counter:
   418                           	callstack 0
   419  0016'                    lcd_8_bit_send_char_data@l_data_counter:
   420                           	callstack 0
   421                           
   422                           ; 1 bytes @ 0x16
   423  0016'                    	ds	1
   424  0017'                    lcd_8_bit_initialize@lcd:
   425                           	callstack 0
   426  0017'                    lcd_8_bit_send_string@lcd:
   427                           	callstack 0
   428  0017'                    lcd_8bit_set_cursor@lcd:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x17
   432  0017'                    	ds	2
   433  0019'                    ??_lcd_8_bit_initialize:
   434  0019'                    lcd_8bit_set_cursor@row:
   435                           	callstack 0
   436  0019'                    lcd_8_bit_send_string@str:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x19
   440  0019'                    	ds	1
   441  001A'                    lcd_8bit_set_cursor@coulmn:
   442                           	callstack 0
   443                           
   444                           ; 1 bytes @ 0x1A
   445  001A'                    	ds	1
   446  001B'                    ??_lcd_8bit_set_cursor:
   447  001B'                    lcd_8_bit_initialize@l_data_counter:
   448                           	callstack 0
   449  001B'                    lcd_8_bit_send_string@ret:
   450                           	callstack 0
   451                           
   452                           ; 1 bytes @ 0x1B
   453  001B'                    	ds	1
   454  001C'                    lcd_8_bit_initialize@ret:
   455                           	callstack 0
   456                           
   457                           ; 1 bytes @ 0x1C
   458  001C'                    	ds	1
   459  001D'                    lcd_8bit_set_cursor@ret:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x1D
   463  001D'                    	ds	1
   464  001E'                    lcd_8_bit_send_data_position@lcd:
   465                           	callstack 0
   466  001E'                    lcd_8_bit_send_string_position@lcd:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0x1E
   470  001E'                    	ds	2
   471  0020'                    lcd_8_bit_send_data_position@data:
   472                           	callstack 0
   473  0020'                    lcd_8_bit_send_string_position@str:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0x20
   477  0020'                    	ds	1
   478  0021'                    lcd_8_bit_send_data_position@row:
   479                           	callstack 0
   480                           
   481                           ; 1 bytes @ 0x21
   482  0021'                    	ds	1
   483  0022'                    lcd_8_bit_send_data_position@colum:
   484                           	callstack 0
   485  0022'                    lcd_8_bit_send_string_position@row:
   486                           	callstack 0
   487                           
   488                           ; 1 bytes @ 0x22
   489  0022'                    	ds	1
   490  0023'                    lcd_8_bit_send_data_position@ret:
   491                           	callstack 0
   492  0023'                    lcd_8_bit_send_string_position@colum:
   493                           	callstack 0
   494                           
   495                           ; 1 bytes @ 0x23
   496  0023'                    	ds	1
   497  0024'                    lcd_8_bit_send_string_position@ret:
   498                           	callstack 0
   499                           
   500                           ; 1 bytes @ 0x24
   501  0024'                    	ds	1
   502  0025'                    
   503                           ; 1 bytes @ 0x25
   504 ;;
   505 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   506 ;;
   507 ;; *************** function _main *****************
   508 ;; Defined at:
   509 ;;		line 9 in file "application.c"
   510 ;; Parameters:    Size  Location     Type
   511 ;;		None
   512 ;; Auto vars:     Size  Location     Type
   513 ;;  ret             1    0        unsigned char 
   514 ;; Return value:  Size  Location     Type
   515 ;;                  2  300[None  ] int 
   516 ;; Registers used:
   517 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, bsr, status,2, status,0, pcl, pclath, pclatu, btemp, b
      +temp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, 
      +btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, 
      +btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, cs
      +tack
   518 ;; Tracked objects:
   519 ;;		On entry : 0/0
   520 ;;		On exit  : 0/0
   521 ;;		Unchanged: 0/0
   522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   527 ;;Total ram usage:        0 bytes
   528 ;; Hardware stack levels required when called: 6
   529 ;; This function calls:
   530 ;;		_application_initialize
   531 ;;		_lcd_4_bit_send_command
   532 ;;		_lcd_8_bit_send_char_data
   533 ;;		_lcd_8_bit_send_data_position
   534 ;;		_lcd_8_bit_send_string
   535 ;;		_lcd_8_bit_send_string_position
   536 ;; This function is called by:
   537 ;;		Startup code after reset
   538 ;; This function uses a non-reentrant model
   539 ;;
   540                           
   541                           	psect	text0
   542  0000'                    __ptext0:
   543                           	callstack 0
   544  0000'                    _main:
   545                           	callstack 25
   546  0000'                    
   547                           ;application.c: 12: application_initialize();
   548  0000' EC00' F000'        	call	_application_initialize	;wreg free
   549  0004' 0E00'              	movlw	low _lcd_1
   550  0006' 6E00'              	movwf	lcd_4_bit_send_command@lcd^0,c
   551  0008' 0E00'              	movlw	high _lcd_1
   552  000A' 6E00'              	movwf	(lcd_4_bit_send_command@lcd+1)^0,c
   553  000C' 0E07               	movlw	7
   554  000E' 6E00'              	movwf	lcd_4_bit_send_command@command^0,c
   555  0010' EC00' F000'        	call	_lcd_4_bit_send_command	;wreg free
   556  0014' 0E00'              	movlw	low _lcd_2
   557  0016' 6E00'              	movwf	lcd_8_bit_send_string_position@lcd^0,c
   558  0018' 0E00'              	movlw	high _lcd_2
   559  001A' 6E00'              	movwf	(lcd_8_bit_send_string_position@lcd+1)^0,c
   560  001C' 0E01               	movlw	1
   561  001E' 6E00'              	movwf	lcd_8_bit_send_string_position@str^0,c
   562  0020' 0E00               	movlw	0
   563  0022' 6E00'              	movwf	(lcd_8_bit_send_string_position@str+1)^0,c
   564  0024' 0E01               	movlw	1
   565  0026' 6E00'              	movwf	lcd_8_bit_send_string_position@row^0,c
   566  0028' 0E00'              	movlw	low (low STR_1)
   567  002A' 6E00'              	movwf	lcd_8_bit_send_string_position@colum^0,c
   568  002C' EC00' F000'        	call	_lcd_8_bit_send_string_position	;wreg free
   569  0030' 0E00'              	movlw	low _lcd_2
   570  0032' 6E00'              	movwf	lcd_8_bit_send_string@lcd^0,c
   571  0034' 0E00'              	movlw	high _lcd_2
   572  0036' 6E00'              	movwf	(lcd_8_bit_send_string@lcd+1)^0,c
   573  0038' 0E00'              	movlw	low STR_2
   574  003A' 6E00'              	movwf	lcd_8_bit_send_string@str^0,c
   575  003C' 0E00'              	movlw	high STR_2
   576  003E' 6E00'              	movwf	(lcd_8_bit_send_string@str+1)^0,c
   577  0040' EC00' F000'        	call	_lcd_8_bit_send_string	;wreg free
   578  0044' 0E00'              	movlw	low _lcd_2
   579  0046' 6E00'              	movwf	lcd_8_bit_send_data_position@lcd^0,c
   580  0048' 0E00'              	movlw	high _lcd_2
   581  004A' 6E00'              	movwf	(lcd_8_bit_send_data_position@lcd+1)^0,c
   582  004C' 0E04               	movlw	4
   583  004E' 6E00'              	movwf	lcd_8_bit_send_data_position@data^0,c
   584  0050' 0E08               	movlw	8
   585  0052' 6E00'              	movwf	lcd_8_bit_send_data_position@row^0,c
   586  0054' 0E09               	movlw	9
   587  0056' 6E00'              	movwf	lcd_8_bit_send_data_position@colum^0,c
   588  0058' EC00' F000'        	call	_lcd_8_bit_send_data_position	;wreg free
   589  005C' 0E00'              	movlw	low _lcd_2
   590  005E' 6E00'              	movwf	lcd_8_bit_send_char_data@lcd^0,c
   591  0060' 0E00'              	movlw	high _lcd_2
   592  0062' 6E00'              	movwf	(lcd_8_bit_send_char_data@lcd+1)^0,c
   593  0064' 0E75               	movlw	117
   594  0066' 6E00'              	movwf	lcd_8_bit_send_char_data@data^0,c
   595  0068' EC00' F000'        	call	_lcd_8_bit_send_char_data	;wreg free
   596  006C'                    l301:
   597  006C' EF00' F000'        	goto	l301
   598  0070' EF00' F000'        	goto	start
   599  0074'                    __end_of_main:
   600                           	callstack 0
   601                           
   602 ;; *************** function _lcd_8_bit_send_string_position *****************
   603 ;; Defined at:
   604 ;;		line 261 in file "ECU_Layer/LCD/ecu_LCD.c"
   605 ;; Parameters:    Size  Location     Type
   606 ;;  lcd             2   30[COMRAM] PTR const struct .
   607 ;;		 -> lcd_2(10), 
   608 ;;  str             2   32[COMRAM] PTR unsigned char 
   609 ;;		 -> RAM(3967), 
   610 ;;  row             1   34[COMRAM] unsigned char 
   611 ;;  colum           1   35[COMRAM] unsigned char 
   612 ;; Auto vars:     Size  Location     Type
   613 ;;  ret             1   36[COMRAM] unsigned char 
   614 ;; Return value:  Size  Location     Type
   615 ;;                  1    wreg      unsigned char 
   616 ;; Registers used:
   617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   618 ;; Tracked objects:
   619 ;;		On entry : 0/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   623 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   624 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   626 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   627 ;;Total ram usage:        7 bytes
   628 ;; Hardware stack levels used: 1
   629 ;; Hardware stack levels required when called: 4
   630 ;; This function calls:
   631 ;;		_lcd_8_bit_send_char_data
   632 ;;		_lcd_8bit_set_cursor
   633 ;; This function is called by:
   634 ;;		_main
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638                           	psect	text1
   639  0000'                    __ptext1:
   640                           	callstack 0
   641  0000'                    _lcd_8_bit_send_string_position:
   642                           	callstack 26
   643  0000'                    
   644                           ;ECU_Layer/LCD/ecu_LCD.c: 263:  if(lcd == ((void*)0)){
   645  0000' 5000'              	movf	lcd_8_bit_send_string_position@lcd^0,w,c
   646  0002' 1000'              	iorwf	(lcd_8_bit_send_string_position@lcd+1)^0,w,c
   647  0004' A4D8               	btfss	status,2,c
   648  0006' EF00' F000'        	goto	u1101
   649  000A' EF00' F000'        	goto	u1100
   650  000E'                    u1101:
   651  000E' EF00' F000'        	goto	l2111
   652  0012'                    u1100:
   653  0012'                    
   654                           ;ECU_Layer/LCD/ecu_LCD.c: 264:      ret = (Std_ReturnType)0x00;
   655  0012' 0E00               	movlw	0
   656  0014' 6E00'              	movwf	lcd_8_bit_send_string_position@ret^0,c
   657                           
   658                           ;ECU_Layer/LCD/ecu_LCD.c: 265:  }
   659  0016' EF00' F000'        	goto	l2119
   660  001A'                    l2111:
   661                           
   662                           ;ECU_Layer/LCD/ecu_LCD.c: 267:       ret = lcd_8bit_set_cursor(lcd, row, colum);
   663  001A' C01E' F017'        	movff	lcd_8_bit_send_string_position@lcd,lcd_8bit_set_cursor@lcd
   664  001E' C01F' F018'        	movff	lcd_8_bit_send_string_position@lcd+1,lcd_8bit_set_cursor@lcd+1
   665  0022' C022' F019'        	movff	lcd_8_bit_send_string_position@row,lcd_8bit_set_cursor@row
   666  0026' C023' F01A'        	movff	lcd_8_bit_send_string_position@colum,lcd_8bit_set_cursor@coulmn
   667  002A' EC00' F000'        	call	_lcd_8bit_set_cursor	;wreg free
   668  002E' 6E00'              	movwf	lcd_8_bit_send_string_position@ret^0,c
   669                           
   670                           ;ECU_Layer/LCD/ecu_LCD.c: 268:      while(*str){
   671  0030' EF00' F000'        	goto	l2117
   672  0034'                    l2113:
   673                           
   674                           ;ECU_Layer/LCD/ecu_LCD.c: 269:     ret = lcd_8_bit_send_char_data(lcd, *str++);
   675  0034' C01E' F00E'        	movff	lcd_8_bit_send_string_position@lcd,lcd_8_bit_send_char_data@lcd
   676  0038' C01F' F00F'        	movff	lcd_8_bit_send_string_position@lcd+1,lcd_8_bit_send_char_data@lcd+1
   677  003C' C020' FFD9         	movff	lcd_8_bit_send_string_position@str,fsr2l
   678  0040' C021' FFDA         	movff	lcd_8_bit_send_string_position@str+1,fsr2h
   679  0044' 50DF               	movf	indf2,w,c
   680  0046' 6E00'              	movwf	lcd_8_bit_send_char_data@data^0,c
   681  0048' EC00' F000'        	call	_lcd_8_bit_send_char_data	;wreg free
   682  004C' 6E00'              	movwf	lcd_8_bit_send_string_position@ret^0,c
   683  004E' 4A00'              	infsnz	lcd_8_bit_send_string_position@str^0,f,c
   684  0050' 2A00'              	incf	(lcd_8_bit_send_string_position@str+1)^0,f,c
   685  0052'                    l2117:
   686                           
   687                           ;ECU_Layer/LCD/ecu_LCD.c: 268:      while(*str){
   688  0052' C020' FFD9         	movff	lcd_8_bit_send_string_position@str,fsr2l
   689  0056' C021' FFDA         	movff	lcd_8_bit_send_string_position@str+1,fsr2h
   690  005A' 50DF               	movf	indf2,w,c
   691  005C' A4D8               	btfss	status,2,c
   692  005E' EF00' F000'        	goto	u1111
   693  0062' EF00' F000'        	goto	u1110
   694  0066'                    u1111:
   695  0066' EF00' F000'        	goto	l2113
   696  006A'                    u1110:
   697  006A'                    l2119:
   698                           
   699                           ;ECU_Layer/LCD/ecu_LCD.c: 272: return ret;
   700  006A' 5000'              	movf	lcd_8_bit_send_string_position@ret^0,w,c
   701  006C' 0012               	return		;funcret
   702  006E'                    __end_of_lcd_8_bit_send_string_position:
   703                           	callstack 0
   704                           
   705 ;; *************** function _lcd_8_bit_send_string *****************
   706 ;; Defined at:
   707 ;;		line 241 in file "ECU_Layer/LCD/ecu_LCD.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;  lcd             2   23[COMRAM] PTR const struct .
   710 ;;		 -> lcd_2(10), 
   711 ;;  str             2   25[COMRAM] PTR unsigned char 
   712 ;;		 -> STR_2(4), 
   713 ;; Auto vars:     Size  Location     Type
   714 ;;  ret             1   27[COMRAM] unsigned char 
   715 ;; Return value:  Size  Location     Type
   716 ;;                  1    wreg      unsigned char 
   717 ;; Registers used:
   718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   719 ;; Tracked objects:
   720 ;;		On entry : 0/0
   721 ;;		On exit  : 0/0
   722 ;;		Unchanged: 0/0
   723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   724 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   725 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   727 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   728 ;;Total ram usage:        5 bytes
   729 ;; Hardware stack levels used: 1
   730 ;; Hardware stack levels required when called: 3
   731 ;; This function calls:
   732 ;;		_lcd_8_bit_send_char_data
   733 ;; This function is called by:
   734 ;;		_main
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738                           	psect	text2
   739  0000'                    __ptext2:
   740                           	callstack 0
   741  0000'                    _lcd_8_bit_send_string:
   742                           	callstack 27
   743  0000'                    
   744                           ;ECU_Layer/LCD/ecu_LCD.c: 242: Std_ReturnType ret = (Std_ReturnType)0x01;
   745  0000' 0E01               	movlw	1
   746  0002' 6E00'              	movwf	lcd_8_bit_send_string@ret^0,c
   747  0004'                    
   748                           ;ECU_Layer/LCD/ecu_LCD.c: 243:  if(lcd == ((void*)0)){
   749  0004' 5000'              	movf	lcd_8_bit_send_string@lcd^0,w,c
   750  0006' 1000'              	iorwf	(lcd_8_bit_send_string@lcd+1)^0,w,c
   751  0008' A4D8               	btfss	status,2,c
   752  000A' EF00' F000'        	goto	u1121
   753  000E' EF00' F000'        	goto	u1120
   754  0012'                    u1121:
   755  0012' EF00' F000'        	goto	l2133
   756  0016'                    u1120:
   757  0016'                    
   758                           ;ECU_Layer/LCD/ecu_LCD.c: 244:      ret = (Std_ReturnType)0x00;
   759  0016' 0E00               	movlw	0
   760  0018' 6E00'              	movwf	lcd_8_bit_send_string@ret^0,c
   761                           
   762                           ;ECU_Layer/LCD/ecu_LCD.c: 245:  }
   763  001A' EF00' F000'        	goto	l2135
   764  001E'                    l2129:
   765                           
   766                           ;ECU_Layer/LCD/ecu_LCD.c: 248:     ret = lcd_8_bit_send_char_data(lcd, *str++);
   767  001E' C017' F00E'        	movff	lcd_8_bit_send_string@lcd,lcd_8_bit_send_char_data@lcd
   768  0022' C018' F00F'        	movff	lcd_8_bit_send_string@lcd+1,lcd_8_bit_send_char_data@lcd+1
   769  0026' C019' FFF6         	movff	lcd_8_bit_send_string@str,tblptrl
   770  002A' C01A' FFF7         	movff	lcd_8_bit_send_string@str+1,tblptrh
   771  002E'                    	if	1	;Program memory is < 0x10000, tblptru is always zero
   772  002E' 6AF8               	clrf	tblptru,c
   773  0030'                    	endif
   774  0030'                    	if	0	;tblptru may be non-zero
   775  0030'                    	endif
   776  0030' 0008               	tblrd		*
   777  0032' CFF5 F010'         	movff	tablat,lcd_8_bit_send_char_data@data
   778  0036' EC00' F000'        	call	_lcd_8_bit_send_char_data	;wreg free
   779  003A' 6E00'              	movwf	lcd_8_bit_send_string@ret^0,c
   780  003C' 4A00'              	infsnz	lcd_8_bit_send_string@str^0,f,c
   781  003E' 2A00'              	incf	(lcd_8_bit_send_string@str+1)^0,f,c
   782  0040'                    l2133:
   783                           
   784                           ;ECU_Layer/LCD/ecu_LCD.c: 247:      while(*str){
   785  0040' C019' FFF6         	movff	lcd_8_bit_send_string@str,tblptrl
   786  0044' C01A' FFF7         	movff	lcd_8_bit_send_string@str+1,tblptrh
   787  0048'                    	if	1	;Program memory is < 0x10000, tblptru is always zero
   788  0048' 6AF8               	clrf	tblptru,c
   789  004A'                    	endif
   790  004A'                    	if	0	;tblptru may be non-zero
   791  004A'                    	endif
   792  004A' 0008               	tblrd		*
   793  004C' 50F5               	movf	tablat,w,c
   794  004E' 0900               	iorlw	0
   795  0050' A4D8               	btfss	status,2,c
   796  0052' EF00' F000'        	goto	u1131
   797  0056' EF00' F000'        	goto	u1130
   798  005A'                    u1131:
   799  005A' EF00' F000'        	goto	l2129
   800  005E'                    u1130:
   801  005E'                    l2135:
   802                           
   803                           ;ECU_Layer/LCD/ecu_LCD.c: 251: return ret;
   804  005E' 5000'              	movf	lcd_8_bit_send_string@ret^0,w,c
   805  0060' 0012               	return		;funcret
   806  0062'                    __end_of_lcd_8_bit_send_string:
   807                           	callstack 0
   808                           
   809 ;; *************** function _lcd_8_bit_send_data_position *****************
   810 ;; Defined at:
   811 ;;		line 221 in file "ECU_Layer/LCD/ecu_LCD.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;  lcd             2   30[COMRAM] PTR const struct .
   814 ;;		 -> lcd_2(10), 
   815 ;;  data            1   32[COMRAM] unsigned char 
   816 ;;  row             1   33[COMRAM] unsigned char 
   817 ;;  colum           1   34[COMRAM] unsigned char 
   818 ;; Auto vars:     Size  Location     Type
   819 ;;  ret             1   35[COMRAM] unsigned char 
   820 ;; Return value:  Size  Location     Type
   821 ;;                  1    wreg      unsigned char 
   822 ;; Registers used:
   823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   829 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   830 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   832 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   833 ;;Total ram usage:        6 bytes
   834 ;; Hardware stack levels used: 1
   835 ;; Hardware stack levels required when called: 4
   836 ;; This function calls:
   837 ;;		_lcd_8_bit_send_char_data
   838 ;;		_lcd_8bit_set_cursor
   839 ;; This function is called by:
   840 ;;		_main
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844                           	psect	text3
   845  0000'                    __ptext3:
   846                           	callstack 0
   847  0000'                    _lcd_8_bit_send_data_position:
   848                           	callstack 26
   849  0000'                    
   850                           ;ECU_Layer/LCD/ecu_LCD.c: 223:  if(lcd == ((void*)0)){
   851  0000' 5000'              	movf	lcd_8_bit_send_data_position@lcd^0,w,c
   852  0002' 1000'              	iorwf	(lcd_8_bit_send_data_position@lcd+1)^0,w,c
   853  0004' A4D8               	btfss	status,2,c
   854  0006' EF00' F000'        	goto	u1141
   855  000A' EF00' F000'        	goto	u1140
   856  000E'                    u1141:
   857  000E' EF00' F000'        	goto	l2145
   858  0012'                    u1140:
   859  0012'                    
   860                           ;ECU_Layer/LCD/ecu_LCD.c: 224:      ret = (Std_ReturnType)0x00;
   861  0012' 0E00               	movlw	0
   862  0014' 6E00'              	movwf	lcd_8_bit_send_data_position@ret^0,c
   863                           
   864                           ;ECU_Layer/LCD/ecu_LCD.c: 225:  }
   865  0016' EF00' F000'        	goto	l2147
   866  001A'                    l2145:
   867                           
   868                           ;ECU_Layer/LCD/ecu_LCD.c: 227:      ret = lcd_8bit_set_cursor(lcd,row, colum);
   869  001A' C01E' F017'        	movff	lcd_8_bit_send_data_position@lcd,lcd_8bit_set_cursor@lcd
   870  001E' C01F' F018'        	movff	lcd_8_bit_send_data_position@lcd+1,lcd_8bit_set_cursor@lcd+1
   871  0022' C021' F019'        	movff	lcd_8_bit_send_data_position@row,lcd_8bit_set_cursor@row
   872  0026' C022' F01A'        	movff	lcd_8_bit_send_data_position@colum,lcd_8bit_set_cursor@coulmn
   873  002A' EC00' F000'        	call	_lcd_8bit_set_cursor	;wreg free
   874  002E' 6E00'              	movwf	lcd_8_bit_send_data_position@ret^0,c
   875                           
   876                           ;ECU_Layer/LCD/ecu_LCD.c: 228:      ret = lcd_8_bit_send_char_data(lcd, data);
   877  0030' C01E' F00E'        	movff	lcd_8_bit_send_data_position@lcd,lcd_8_bit_send_char_data@lcd
   878  0034' C01F' F00F'        	movff	lcd_8_bit_send_data_position@lcd+1,lcd_8_bit_send_char_data@lcd+1
   879  0038' C020' F010'        	movff	lcd_8_bit_send_data_position@data,lcd_8_bit_send_char_data@data
   880  003C' EC00' F000'        	call	_lcd_8_bit_send_char_data	;wreg free
   881  0040' 6E00'              	movwf	lcd_8_bit_send_data_position@ret^0,c
   882  0042'                    l2147:
   883                           
   884                           ;ECU_Layer/LCD/ecu_LCD.c: 231:  return ret;
   885  0042' 5000'              	movf	lcd_8_bit_send_data_position@ret^0,w,c
   886  0044' 0012               	return		;funcret
   887  0046'                    __end_of_lcd_8_bit_send_data_position:
   888                           	callstack 0
   889                           
   890 ;; *************** function _lcd_8bit_set_cursor *****************
   891 ;; Defined at:
   892 ;;		line 348 in file "ECU_Layer/LCD/ecu_LCD.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;  lcd             2   23[COMRAM] PTR const struct .
   895 ;;		 -> lcd_2(10), 
   896 ;;  row             1   25[COMRAM] unsigned char 
   897 ;;  coulmn          1   26[COMRAM] unsigned char 
   898 ;; Auto vars:     Size  Location     Type
   899 ;;  ret             1   29[COMRAM] unsigned char 
   900 ;; Return value:  Size  Location     Type
   901 ;;                  1    wreg      unsigned char 
   902 ;; Registers used:
   903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   909 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   910 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   911 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   912 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   913 ;;Total ram usage:        7 bytes
   914 ;; Hardware stack levels used: 1
   915 ;; Hardware stack levels required when called: 3
   916 ;; This function calls:
   917 ;;		_lcd_8_bit_send_char_data
   918 ;; This function is called by:
   919 ;;		_lcd_8_bit_send_data_position
   920 ;;		_lcd_8_bit_send_string_position
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           	psect	text4
   925  0000'                    __ptext4:
   926                           	callstack 0
   927  0000'                    _lcd_8bit_set_cursor:
   928                           	callstack 26
   929  0000'                    
   930                           ;ECU_Layer/LCD/ecu_LCD.c: 349:  Std_ReturnType ret = (Std_ReturnType)0x01;
   931  0000' 0E01               	movlw	1
   932  0002' 6E00'              	movwf	lcd_8bit_set_cursor@ret^0,c
   933  0004'                    
   934                           ;ECU_Layer/LCD/ecu_LCD.c: 350:  coulmn--;
   935  0004' 0600'              	decf	lcd_8bit_set_cursor@coulmn^0,f,c
   936                           
   937                           ;ECU_Layer/LCD/ecu_LCD.c: 351:  switch (row){
   938  0006' EF00' F000'        	goto	l2079
   939  000A'                    l2071:
   940  000A' C017' F00E'        	movff	lcd_8bit_set_cursor@lcd,lcd_8_bit_send_char_data@lcd
   941  000E' C018' F00F'        	movff	lcd_8bit_set_cursor@lcd+1,lcd_8_bit_send_char_data@lcd+1
   942  0012' 5000'              	movf	lcd_8bit_set_cursor@coulmn^0,w,c
   943  0014' 0F80               	addlw	128
   944  0016' 6E00'              	movwf	lcd_8_bit_send_char_data@data^0,c
   945  0018' EC00' F000'        	call	_lcd_8_bit_send_char_data	;wreg free
   946  001C' 6E00'              	movwf	lcd_8bit_set_cursor@ret^0,c
   947  001E' EF00' F000'        	goto	l2081
   948  0022'                    l2073:
   949  0022' C017' F00E'        	movff	lcd_8bit_set_cursor@lcd,lcd_8_bit_send_char_data@lcd
   950  0026' C018' F00F'        	movff	lcd_8bit_set_cursor@lcd+1,lcd_8_bit_send_char_data@lcd+1
   951  002A' 5000'              	movf	lcd_8bit_set_cursor@coulmn^0,w,c
   952  002C' 0FC0               	addlw	192
   953  002E' 6E00'              	movwf	lcd_8_bit_send_char_data@data^0,c
   954  0030' EC00' F000'        	call	_lcd_8_bit_send_char_data	;wreg free
   955  0034' 6E00'              	movwf	lcd_8bit_set_cursor@ret^0,c
   956  0036' EF00' F000'        	goto	l2081
   957  003A'                    l2075:
   958  003A' C017' F00E'        	movff	lcd_8bit_set_cursor@lcd,lcd_8_bit_send_char_data@lcd
   959  003E' C018' F00F'        	movff	lcd_8bit_set_cursor@lcd+1,lcd_8_bit_send_char_data@lcd+1
   960  0042' 5000'              	movf	lcd_8bit_set_cursor@coulmn^0,w,c
   961  0044' 0F94               	addlw	148
   962  0046' 6E00'              	movwf	lcd_8_bit_send_char_data@data^0,c
   963  0048' EC00' F000'        	call	_lcd_8_bit_send_char_data	;wreg free
   964  004C' 6E00'              	movwf	lcd_8bit_set_cursor@ret^0,c
   965  004E' EF00' F000'        	goto	l2081
   966  0052'                    l2077:
   967  0052' C017' F00E'        	movff	lcd_8bit_set_cursor@lcd,lcd_8_bit_send_char_data@lcd
   968  0056' C018' F00F'        	movff	lcd_8bit_set_cursor@lcd+1,lcd_8_bit_send_char_data@lcd+1
   969  005A' 5000'              	movf	lcd_8bit_set_cursor@coulmn^0,w,c
   970  005C' 0FD4               	addlw	212
   971  005E' 6E00'              	movwf	lcd_8_bit_send_char_data@data^0,c
   972  0060' EC00' F000'        	call	_lcd_8_bit_send_char_data	;wreg free
   973  0064' 6E00'              	movwf	lcd_8bit_set_cursor@ret^0,c
   974  0066' EF00' F000'        	goto	l2081
   975  006A'                    l2079:
   976  006A' 5000'              	movf	lcd_8bit_set_cursor@row^0,w,c
   977  006C' 6E00'              	movwf	??_lcd_8bit_set_cursor^0,c
   978  006E' 6A00'              	clrf	(??_lcd_8bit_set_cursor+1)^0,c
   979                           
   980                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   981                           ; Switch size 1, requested type "simple"
   982                           ; Number of cases is 1, Range of values is 0 to 0
   983                           ; switch strategies available:
   984                           ; Name         Instructions Cycles
   985                           ; simple_byte            4     3 (average)
   986                           ;	Chosen strategy is simple_byte
   987  0070' 5000'              	movf	(??_lcd_8bit_set_cursor+1)^0,w,c
   988  0072' 0A00               	xorlw	0	; case 0
   989  0074' B4D8               	btfsc	status,2,c
   990  0076' EF00' F000'        	goto	l2519
   991  007A' EF00' F000'        	goto	l2081
   992  007E'                    l2519:
   993                           
   994                           ; Switch size 1, requested type "simple"
   995                           ; Number of cases is 4, Range of values is 1 to 4
   996                           ; switch strategies available:
   997                           ; Name         Instructions Cycles
   998                           ; simple_byte           13     7 (average)
   999                           ;	Chosen strategy is simple_byte
  1000  007E' 5000'              	movf	??_lcd_8bit_set_cursor^0,w,c
  1001  0080' 0A01               	xorlw	1	; case 1
  1002  0082' B4D8               	btfsc	status,2,c
  1003  0084' EF00' F000'        	goto	l2071
  1004  0088' 0A03               	xorlw	3	; case 2
  1005  008A' B4D8               	btfsc	status,2,c
  1006  008C' EF00' F000'        	goto	l2073
  1007  0090' 0A01               	xorlw	1	; case 3
  1008  0092' B4D8               	btfsc	status,2,c
  1009  0094' EF00' F000'        	goto	l2075
  1010  0098' 0A07               	xorlw	7	; case 4
  1011  009A' B4D8               	btfsc	status,2,c
  1012  009C' EF00' F000'        	goto	l2077
  1013  00A0' EF00' F000'        	goto	l2081
  1014  00A4'                    l2081:
  1015                           
  1016                           ;ECU_Layer/LCD/ecu_LCD.c: 358:  return ret;
  1017  00A4' 5000'              	movf	lcd_8bit_set_cursor@ret^0,w,c
  1018  00A6' 0012               	return		;funcret
  1019  00A8'                    __end_of_lcd_8bit_set_cursor:
  1020                           	callstack 0
  1021                           
  1022 ;; *************** function _lcd_8_bit_send_char_data *****************
  1023 ;; Defined at:
  1024 ;;		line 195 in file "ECU_Layer/LCD/ecu_LCD.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;  lcd             2   14[COMRAM] PTR const struct .
  1027 ;;		 -> lcd_2(10), 
  1028 ;;  data            1   16[COMRAM] unsigned char 
  1029 ;; Auto vars:     Size  Location     Type
  1030 ;;  l_data_count    1   22[COMRAM] unsigned char 
  1031 ;;  ret             1   21[COMRAM] unsigned char 
  1032 ;; Return value:  Size  Location     Type
  1033 ;;                  1    wreg      unsigned char 
  1034 ;; Registers used:
  1035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1036 ;; Tracked objects:
  1037 ;;		On entry : 0/0
  1038 ;;		On exit  : 0/0
  1039 ;;		Unchanged: 0/0
  1040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1041 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1042 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1043 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1044 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1045 ;;Total ram usage:        9 bytes
  1046 ;; Hardware stack levels used: 1
  1047 ;; Hardware stack levels required when called: 2
  1048 ;; This function calls:
  1049 ;;		_gpio_pin_write_logic
  1050 ;;		_lcd_8bit_send_enable_signal
  1051 ;; This function is called by:
  1052 ;;		_main
  1053 ;;		_lcd_8_bit_send_data_position
  1054 ;;		_lcd_8_bit_send_string
  1055 ;;		_lcd_8_bit_send_string_position
  1056 ;;		_lcd_8bit_set_cursor
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           	psect	text5
  1061  0000'                    __ptext5:
  1062                           	callstack 0
  1063  0000'                    _lcd_8_bit_send_char_data:
  1064                           	callstack 26
  1065  0000'                    
  1066                           ;ECU_Layer/LCD/ecu_LCD.c: 197:  uint_8 l_data_counter =0 ;
  1067  0000' 0E00               	movlw	0
  1068  0002' 6E00'              	movwf	lcd_8_bit_send_char_data@l_data_counter^0,c
  1069  0004'                    
  1070                           ;ECU_Layer/LCD/ecu_LCD.c: 198:  if(lcd == ((void*)0)){
  1071  0004' 5000'              	movf	lcd_8_bit_send_char_data@lcd^0,w,c
  1072  0006' 1000'              	iorwf	(lcd_8_bit_send_char_data@lcd+1)^0,w,c
  1073  0008' A4D8               	btfss	status,2,c
  1074  000A' EF00' F000'        	goto	u1061
  1075  000E' EF00' F000'        	goto	u1060
  1076  0012'                    u1061:
  1077  0012' EF00' F000'        	goto	l2019
  1078  0016'                    u1060:
  1079  0016'                    
  1080                           ;ECU_Layer/LCD/ecu_LCD.c: 199:      ret = (Std_ReturnType)0x00;
  1081  0016' 0E00               	movlw	0
  1082  0018' 6E00'              	movwf	lcd_8_bit_send_char_data@ret^0,c
  1083                           
  1084                           ;ECU_Layer/LCD/ecu_LCD.c: 200:  }
  1085  001A' EF00' F000'        	goto	l2035
  1086  001E'                    l2019:
  1087  001E' C00E' F000'        	movff	lcd_8_bit_send_char_data@lcd,gpio_pin_write_logic@pin_config
  1088  0022' C00F' F001'        	movff	lcd_8_bit_send_char_data@lcd+1,gpio_pin_write_logic@pin_config+1
  1089  0026' 0E01               	movlw	1
  1090  0028' 6E00'              	movwf	gpio_pin_write_logic@logic^0,c
  1091  002A' EC00' F000'        	call	_gpio_pin_write_logic	;wreg free
  1092  002E'                    
  1093                           ;ECU_Layer/LCD/ecu_LCD.c: 203:    for(l_data_counter = 0 ; l_data_counter < 8; l_data_co
      +                          unter++){
  1094  002E' 0E00               	movlw	0
  1095  0030' 6E00'              	movwf	lcd_8_bit_send_char_data@l_data_counter^0,c
  1096  0032'                    l2027:
  1097  0032' 5000'              	movf	lcd_8_bit_send_char_data@l_data_counter^0,w,c
  1098  0034' 2400'              	addwf	lcd_8_bit_send_char_data@lcd^0,w,c
  1099  0036' 6E00'              	movwf	??_lcd_8_bit_send_char_data^0,c
  1100  0038' 0E00               	movlw	0
  1101  003A' 2000'              	addwfc	(lcd_8_bit_send_char_data@lcd+1)^0,w,c
  1102  003C' 6E00'              	movwf	(??_lcd_8_bit_send_char_data+1)^0,c
  1103  003E' 0E02               	movlw	2
  1104  0040' 2400'              	addwf	??_lcd_8_bit_send_char_data^0,w,c
  1105  0042' 6E00'              	movwf	gpio_pin_write_logic@pin_config^0,c
  1106  0044' 0E00               	movlw	0
  1107  0046' 2000'              	addwfc	(??_lcd_8_bit_send_char_data+1)^0,w,c
  1108  0048' 6E00'              	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1109  004A' C016' F013'        	movff	lcd_8_bit_send_char_data@l_data_counter,??_lcd_8_bit_send_char_data+2
  1110  004E' C010' F014'        	movff	lcd_8_bit_send_char_data@data,??_lcd_8_bit_send_char_data+3
  1111  0052' 2A00'              	incf	(??_lcd_8_bit_send_char_data+2)^0,f,c
  1112  0054' EF00' F000'        	goto	u1074
  1113  0058'                    u1075:
  1114  0058' 90D8               	bcf	status,0,c
  1115  005A' 3600'              	rlcf	(??_lcd_8_bit_send_char_data+3)^0,f,c
  1116  005C'                    u1074:
  1117  005C' 2E00'              	decfsz	(??_lcd_8_bit_send_char_data+2)^0,f,c
  1118  005E' EF00' F000'        	goto	u1075
  1119  0062' 5000'              	movf	(??_lcd_8_bit_send_char_data+3)^0,w,c
  1120  0064' 0B01               	andlw	1
  1121  0066' 6E00'              	movwf	gpio_pin_write_logic@logic^0,c
  1122  0068' EC00' F000'        	call	_gpio_pin_write_logic	;wreg free
  1123  006C'                    
  1124                           ;ECU_Layer/LCD/ecu_LCD.c: 205:    }
  1125  006C' 2A00'              	incf	lcd_8_bit_send_char_data@l_data_counter^0,f,c
  1126  006E' 0E07               	movlw	7
  1127  0070' 6400'              	cpfsgt	lcd_8_bit_send_char_data@l_data_counter^0,c
  1128  0072' EF00' F000'        	goto	u1081
  1129  0076' EF00' F000'        	goto	u1080
  1130  007A'                    u1081:
  1131  007A' EF00' F000'        	goto	l2027
  1132  007E'                    u1080:
  1133  007E'                    
  1134                           ;ECU_Layer/LCD/ecu_LCD.c: 206:    ret = lcd_8bit_send_enable_signal(lcd);
  1135  007E' C00E' F00A'        	movff	lcd_8_bit_send_char_data@lcd,lcd_8bit_send_enable_signal@lcd
  1136  0082' C00F' F00B'        	movff	lcd_8_bit_send_char_data@lcd+1,lcd_8bit_send_enable_signal@lcd+1
  1137  0086' EC00' F000'        	call	_lcd_8bit_send_enable_signal	;wreg free
  1138  008A' 6E00'              	movwf	lcd_8_bit_send_char_data@ret^0,c
  1139  008C'                    l2035:
  1140                           
  1141                           ;ECU_Layer/LCD/ecu_LCD.c: 209:  return ret;
  1142  008C' 5000'              	movf	lcd_8_bit_send_char_data@ret^0,w,c
  1143  008E' 0012               	return		;funcret
  1144  0090'                    __end_of_lcd_8_bit_send_char_data:
  1145                           	callstack 0
  1146                           
  1147 ;; *************** function _lcd_4_bit_send_command *****************
  1148 ;; Defined at:
  1149 ;;		line 51 in file "ECU_Layer/LCD/ecu_LCD.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;  lcd             2   14[COMRAM] PTR const struct .
  1152 ;;		 -> lcd_2(10), lcd_1(6), 
  1153 ;;  command         1   16[COMRAM] unsigned char 
  1154 ;; Auto vars:     Size  Location     Type
  1155 ;;  ret             1   17[COMRAM] unsigned char 
  1156 ;; Return value:  Size  Location     Type
  1157 ;;                  1    wreg      unsigned char 
  1158 ;; Registers used:
  1159 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, bsr, status,2, status,0, pcl, pclath, pclatu, btemp, b
      +temp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, 
      +btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, 
      +btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, cs
      +tack
  1160 ;; Tracked objects:
  1161 ;;		On entry : 0/0
  1162 ;;		On exit  : 0/0
  1163 ;;		Unchanged: 0/0
  1164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1165 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1166 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1168 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1169 ;;Total ram usage:        4 bytes
  1170 ;; Hardware stack levels used: 1
  1171 ;; Hardware stack levels required when called: 2
  1172 ;; This function calls:
  1173 ;;		_gpio_pin_write_logic
  1174 ;;		_lcd_4bit_send_enable_signal
  1175 ;;		_lcd_send_enable_signal
  1176 ;;		_send_4bit_data
  1177 ;; This function is called by:
  1178 ;;		_main
  1179 ;;		_lcd_4_bit_initialize
  1180 ;; This function uses a non-reentrant model
  1181 ;;
  1182                           
  1183                           	psect	text6
  1184  0000'                    __ptext6:
  1185                           	callstack 0
  1186  0000'                    _lcd_4_bit_send_command:
  1187                           	callstack 28
  1188  0000'                    
  1189                           ;ECU_Layer/LCD/ecu_LCD.c: 53:  if(lcd == ((void*)0)){
  1190  0000' 5000'              	movf	lcd_4_bit_send_command@lcd^0,w,c
  1191  0002' 1000'              	iorwf	(lcd_4_bit_send_command@lcd+1)^0,w,c
  1192  0004' A4D8               	btfss	status,2,c
  1193  0006' EF00' F000'        	goto	u1091
  1194  000A' EF00' F000'        	goto	u1090
  1195  000E'                    u1091:
  1196  000E' EF00' F000'        	goto	l2097
  1197  0012'                    u1090:
  1198  0012'                    
  1199                           ;ECU_Layer/LCD/ecu_LCD.c: 54:      ret = (Std_ReturnType)0x00;
  1200  0012' 0E00               	movlw	0
  1201  0014' 6E00'              	movwf	lcd_4_bit_send_command@ret^0,c
  1202                           
  1203                           ;ECU_Layer/LCD/ecu_LCD.c: 55:  }
  1204  0016' EF00' F000'        	goto	l2101
  1205  001A'                    l2097:
  1206                           
  1207                           ;ECU_Layer/LCD/ecu_LCD.c: 57:    ret = gpio_pin_write_logic(&(lcd->lcd_rs), LOW);
  1208  001A' C00E' F000'        	movff	lcd_4_bit_send_command@lcd,gpio_pin_write_logic@pin_config
  1209  001E' C00F' F001'        	movff	lcd_4_bit_send_command@lcd+1,gpio_pin_write_logic@pin_config+1
  1210  0022' 0E00               	movlw	0
  1211  0024' 6E00'              	movwf	gpio_pin_write_logic@logic^0,c
  1212  0026' EC00' F000'        	call	_gpio_pin_write_logic	;wreg free
  1213  002A' 6E00'              	movwf	lcd_4_bit_send_command@ret^0,c
  1214                           
  1215                           ;ECU_Layer/LCD/ecu_LCD.c: 58:    ret = send_4bit_data(&(lcd),command<< 4);
  1216  002C' 0E00'              	movlw	low lcd_4_bit_send_command@lcd
  1217  002E' 6E00'              	movwf	send_4bit_data@lcd^0,c
  1218  0030' 0E00'              	movlw	high lcd_4_bit_send_command@lcd
  1219  0032' 6E00'              	movwf	(send_4bit_data@lcd+1)^0,c
  1220  0034' 3800'              	swapf	lcd_4_bit_send_command@command^0,w,c
  1221  0036' 0BF0               	andlw	240
  1222  0038' 6E00'              	movwf	send_4bit_data@command^0,c
  1223  003A' EC00' F000'        	call	_send_4bit_data	;wreg free
  1224  003E' 6E00'              	movwf	lcd_4_bit_send_command@ret^0,c
  1225                           
  1226                           ;ECU_Layer/LCD/ecu_LCD.c: 59:    ret = lcd_4bit_send_enable_signal(&lcd);
  1227  0040' 0E00'              	movlw	low lcd_4_bit_send_command@lcd
  1228  0042' 6E00'              	movwf	lcd_4bit_send_enable_signal@lcd^0,c
  1229  0044' 0E00'              	movlw	high lcd_4_bit_send_command@lcd
  1230  0046' 6E00'              	movwf	(lcd_4bit_send_enable_signal@lcd+1)^0,c
  1231  0048' EC00' F000'        	call	_lcd_4bit_send_enable_signal	;wreg free
  1232  004C' 6E00'              	movwf	lcd_4_bit_send_command@ret^0,c
  1233                           
  1234                           ;ECU_Layer/LCD/ecu_LCD.c: 60:    ret = send_4bit_data(&(lcd),command);
  1235  004E' 0E00'              	movlw	low lcd_4_bit_send_command@lcd
  1236  0050' 6E00'              	movwf	send_4bit_data@lcd^0,c
  1237  0052' 0E00'              	movlw	high lcd_4_bit_send_command@lcd
  1238  0054' 6E00'              	movwf	(send_4bit_data@lcd+1)^0,c
  1239  0056' C010' F00C'        	movff	lcd_4_bit_send_command@command,send_4bit_data@command
  1240  005A' EC00' F000'        	call	_send_4bit_data	;wreg free
  1241  005E' 6E00'              	movwf	lcd_4_bit_send_command@ret^0,c
  1242  0060'                    
  1243                           ;ECU_Layer/LCD/ecu_LCD.c: 61:    ret = lcd_send_enable_signal(&lcd);
  1244  0060' 0E00'              	movlw	low lcd_4_bit_send_command@lcd
  1245  0062' 6E00'              	movwf	?_lcd_send_enable_signal^0,c
  1246  0064' 0E00'              	movlw	high lcd_4_bit_send_command@lcd
  1247  0066' 6E00'              	movwf	(?_lcd_send_enable_signal+1)^0,c
  1248  0068' EC00' F000'        	call	_lcd_send_enable_signal	;wreg free
  1249  006C' 5000'              	movf	?_lcd_send_enable_signal^0,w,c
  1250  006E' 6E00'              	movwf	lcd_4_bit_send_command@ret^0,c
  1251  0070'                    l2101:
  1252                           
  1253                           ;ECU_Layer/LCD/ecu_LCD.c: 64:  return ret;
  1254  0070' 5000'              	movf	lcd_4_bit_send_command@ret^0,w,c
  1255  0072' 0012               	return		;funcret
  1256  0074'                    __end_of_lcd_4_bit_send_command:
  1257                           	callstack 0
  1258                           
  1259 ;; *************** function _send_4bit_data *****************
  1260 ;; Defined at:
  1261 ;;		line 305 in file "ECU_Layer/LCD/ecu_LCD.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;  lcd             2   10[COMRAM] PTR const struct .
  1264 ;;		 -> lcd_4_bit_send_char_data@lcd(2), lcd_4_bit_send_command@lcd(2), 
  1265 ;;  command         1   12[COMRAM] unsigned char 
  1266 ;; Auto vars:     Size  Location     Type
  1267 ;;  ret             1   13[COMRAM] unsigned char 
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  1    wreg      unsigned char 
  1270 ;; Registers used:
  1271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1277 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1278 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1280 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1281 ;;Total ram usage:        4 bytes
  1282 ;; Hardware stack levels used: 1
  1283 ;; Hardware stack levels required when called: 1
  1284 ;; This function calls:
  1285 ;;		_gpio_pin_write_logic
  1286 ;; This function is called by:
  1287 ;;		_lcd_4_bit_send_command
  1288 ;;		_lcd_4_bit_send_char_data
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           	psect	text7
  1293  0000'                    __ptext7:
  1294                           	callstack 0
  1295  0000'                    _send_4bit_data:
  1296                           	callstack 28
  1297  0000' 0E02               	movlw	2
  1298  0002' 2400'              	addwf	send_4bit_data@lcd^0,w,c
  1299  0004' 6E00'              	movwf	gpio_pin_write_logic@pin_config^0,c
  1300  0006' 0E00               	movlw	0
  1301  0008' 2000'              	addwfc	(send_4bit_data@lcd+1)^0,w,c
  1302  000A' 6E00'              	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1303  000C' 5000'              	movf	send_4bit_data@command^0,w,c
  1304  000E' 0B01               	andlw	1
  1305  0010' 6E00'              	movwf	gpio_pin_write_logic@logic^0,c
  1306  0012' EC00' F000'        	call	_gpio_pin_write_logic	;wreg free
  1307  0016' 0E03               	movlw	3
  1308  0018' 2400'              	addwf	send_4bit_data@lcd^0,w,c
  1309  001A' 6E00'              	movwf	gpio_pin_write_logic@pin_config^0,c
  1310  001C' 0E00               	movlw	0
  1311  001E' 2000'              	addwfc	(send_4bit_data@lcd+1)^0,w,c
  1312  0020' 6E00'              	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1313  0022' 5000'              	movf	send_4bit_data@command^0,w,c
  1314  0024' 2400'              	addwf	send_4bit_data@command^0,w,c
  1315  0026' 0B01               	andlw	1
  1316  0028' 6E00'              	movwf	gpio_pin_write_logic@logic^0,c
  1317  002A' EC00' F000'        	call	_gpio_pin_write_logic	;wreg free
  1318  002E' 0E04               	movlw	4
  1319  0030' 2400'              	addwf	send_4bit_data@lcd^0,w,c
  1320  0032' 6E00'              	movwf	gpio_pin_write_logic@pin_config^0,c
  1321  0034' 0E00               	movlw	0
  1322  0036' 2000'              	addwfc	(send_4bit_data@lcd+1)^0,w,c
  1323  0038' 6E00'              	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1324  003A' 4400'              	rlncf	send_4bit_data@command^0,w,c
  1325  003C' 46E8               	rlncf	wreg,f,c
  1326  003E' 0BFC               	andlw	252
  1327  0040' 0B01               	andlw	1
  1328  0042' 6E00'              	movwf	gpio_pin_write_logic@logic^0,c
  1329  0044' EC00' F000'        	call	_gpio_pin_write_logic	;wreg free
  1330  0048'                    
  1331                           ;ECU_Layer/LCD/ecu_LCD.c: 311:  ret = gpio_pin_write_logic(&(lcd->lcd_data[3]), (command
      +                           << 3)& 0x01);
  1332  0048' 0E05               	movlw	5
  1333  004A' 2400'              	addwf	send_4bit_data@lcd^0,w,c
  1334  004C' 6E00'              	movwf	gpio_pin_write_logic@pin_config^0,c
  1335  004E' 0E00               	movlw	0
  1336  0050' 2000'              	addwfc	(send_4bit_data@lcd+1)^0,w,c
  1337  0052' 6E00'              	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1338  0054' 3800'              	swapf	send_4bit_data@command^0,w,c
  1339  0056' 42E8               	rrncf	wreg,f,c
  1340  0058' 0BF8               	andlw	248
  1341  005A' 0B01               	andlw	1
  1342  005C' 6E00'              	movwf	gpio_pin_write_logic@logic^0,c
  1343  005E' EC00' F000'        	call	_gpio_pin_write_logic	;wreg free
  1344  0062' 6E00'              	movwf	send_4bit_data@ret^0,c
  1345                           
  1346                           ;ECU_Layer/LCD/ecu_LCD.c: 313:  return ret;
  1347  0064' 5000'              	movf	send_4bit_data@ret^0,w,c
  1348  0066' 0012               	return		;funcret
  1349  0068'                    __end_of_send_4bit_data:
  1350                           	callstack 0
  1351                           
  1352 ;; *************** function _lcd_4bit_send_enable_signal *****************
  1353 ;; Defined at:
  1354 ;;		line 320 in file "ECU_Layer/LCD/ecu_LCD.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;  lcd             2   10[COMRAM] PTR const struct .
  1357 ;;		 -> lcd_4_bit_send_char_data@lcd(2), lcd_4_bit_send_command@lcd(2), 
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;  ret             1   13[COMRAM] unsigned char 
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  1    wreg      unsigned char 
  1362 ;; Registers used:
  1363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1369 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1370 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1371 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1372 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1373 ;;Total ram usage:        4 bytes
  1374 ;; Hardware stack levels used: 1
  1375 ;; Hardware stack levels required when called: 1
  1376 ;; This function calls:
  1377 ;;		_gpio_pin_write_logic
  1378 ;; This function is called by:
  1379 ;;		_lcd_4_bit_send_command
  1380 ;;		_lcd_4_bit_send_char_data
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384                           	psect	text8
  1385  0000'                    __ptext8:
  1386                           	callstack 0
  1387  0000'                    _lcd_4bit_send_enable_signal:
  1388                           	callstack 28
  1389  0000' 0E01               	movlw	1
  1390  0002' 2400'              	addwf	lcd_4bit_send_enable_signal@lcd^0,w,c
  1391  0004' 6E00'              	movwf	gpio_pin_write_logic@pin_config^0,c
  1392  0006' 0E00               	movlw	0
  1393  0008' 2000'              	addwfc	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  1394  000A' 6E00'              	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1395  000C' 0E01               	movlw	1
  1396  000E' 6E00'              	movwf	gpio_pin_write_logic@logic^0,c
  1397  0010' EC00' F000'        	call	_gpio_pin_write_logic	;wreg free
  1398  0014'                    
  1399                           ;ECU_Layer/LCD/ecu_LCD.c: 323: _delay((unsigned long)((50)*(8000000UL/4000.0)));
  1400  0014' 0E82               	movlw	130
  1401  0016' 6E00'              	movwf	??_lcd_4bit_send_enable_signal^0,c
  1402  0018' 0EDE               	movlw	222
  1403  001A'                    u1577:
  1404  001A' 2EE8               	decfsz	wreg,f,c
  1405  001C' D7FE               	bra	u1577
  1406  001E' 2E00'              	decfsz	??_lcd_4bit_send_enable_signal^0,f,c
  1407  0020' D7FC               	bra	u1577
  1408  0022'                    
  1409                           ;ECU_Layer/LCD/ecu_LCD.c: 324:  ret = gpio_pin_write_logic(&(lcd->lcd_en) ,LOW);
  1410  0022' 0E01               	movlw	1
  1411  0024' 2400'              	addwf	lcd_4bit_send_enable_signal@lcd^0,w,c
  1412  0026' 6E00'              	movwf	gpio_pin_write_logic@pin_config^0,c
  1413  0028' 0E00               	movlw	0
  1414  002A' 2000'              	addwfc	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  1415  002C' 6E00'              	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1416  002E' 0E00               	movlw	0
  1417  0030' 6E00'              	movwf	gpio_pin_write_logic@logic^0,c
  1418  0032' EC00' F000'        	call	_gpio_pin_write_logic	;wreg free
  1419  0036' 6E00'              	movwf	lcd_4bit_send_enable_signal@ret^0,c
  1420  0038'                    
  1421                           ;ECU_Layer/LCD/ecu_LCD.c: 326:  return ret;
  1422  0038' 5000'              	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  1423  003A' 0012               	return		;funcret
  1424  003C'                    __end_of_lcd_4bit_send_enable_signal:
  1425                           	callstack 0
  1426                           
  1427 ;; *************** function _application_initialize *****************
  1428 ;; Defined at:
  1429 ;;		line 25 in file "application.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;		None
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;		None
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  1    wreg      void 
  1436 ;; Registers used:
  1437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1447 ;;Total ram usage:        0 bytes
  1448 ;; Hardware stack levels used: 1
  1449 ;; Hardware stack levels required when called: 5
  1450 ;; This function calls:
  1451 ;;		_ECU_Layer_initialize
  1452 ;; This function is called by:
  1453 ;;		_main
  1454 ;; This function uses a non-reentrant model
  1455 ;;
  1456                           
  1457                           	psect	text9
  1458  0000'                    __ptext9:
  1459                           	callstack 0
  1460  0000'                    _application_initialize:
  1461                           	callstack 25
  1462  0000'                    
  1463                           ;application.c: 26:    ECU_Layer_initialize();
  1464  0000' EC00' F000'        	call	_ECU_Layer_initialize	;wreg free
  1465  0004' 0012               	return		;funcret
  1466  0006'                    __end_of_application_initialize:
  1467                           	callstack 0
  1468                           
  1469 ;; *************** function _ECU_Layer_initialize *****************
  1470 ;; Defined at:
  1471 ;;		line 84 in file "ECU_Layer/ecu_init.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;		None
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;  ret             1    0        unsigned char 
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      void 
  1478 ;; Registers used:
  1479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1489 ;;Total ram usage:        0 bytes
  1490 ;; Hardware stack levels used: 1
  1491 ;; Hardware stack levels required when called: 4
  1492 ;; This function calls:
  1493 ;;		_lcd_8_bit_initialize
  1494 ;; This function is called by:
  1495 ;;		_application_initialize
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           	psect	text10
  1500  0000'                    __ptext10:
  1501                           	callstack 0
  1502  0000'                    _ECU_Layer_initialize:
  1503                           	callstack 25
  1504  0000' 0E00'              	movlw	low _lcd_2
  1505  0002' 6E00'              	movwf	lcd_8_bit_initialize@lcd^0,c
  1506  0004' 0E00'              	movlw	high _lcd_2
  1507  0006' 6E00'              	movwf	(lcd_8_bit_initialize@lcd+1)^0,c
  1508  0008' EC00' F000'        	call	_lcd_8_bit_initialize	;wreg free
  1509  000C' 0012               	return		;funcret
  1510  000E'                    __end_of_ECU_Layer_initialize:
  1511                           	callstack 0
  1512                           
  1513 ;; *************** function _lcd_8_bit_initialize *****************
  1514 ;; Defined at:
  1515 ;;		line 135 in file "ECU_Layer/LCD/ecu_LCD.c"
  1516 ;; Parameters:    Size  Location     Type
  1517 ;;  lcd             2   23[COMRAM] PTR const struct .
  1518 ;;		 -> lcd_2(10), 
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;  ret             1   28[COMRAM] unsigned char 
  1521 ;;  l_data_count    1   27[COMRAM] unsigned char 
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  1    wreg      unsigned char 
  1524 ;; Registers used:
  1525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1531 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1532 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1533 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1534 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1535 ;;Total ram usage:        6 bytes
  1536 ;; Hardware stack levels used: 1
  1537 ;; Hardware stack levels required when called: 3
  1538 ;; This function calls:
  1539 ;;		_gpio_pin_intialize
  1540 ;;		_lcd_8_bit_send_command
  1541 ;; This function is called by:
  1542 ;;		_ECU_Layer_initialize
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           	psect	text11
  1547  0000'                    __ptext11:
  1548                           	callstack 0
  1549  0000'                    _lcd_8_bit_initialize:
  1550                           	callstack 25
  1551  0000'                    
  1552                           ;ECU_Layer/LCD/ecu_LCD.c: 137:  uint_8 l_data_counter =0 ;
  1553  0000' 0E00               	movlw	0
  1554  0002' 6E00'              	movwf	lcd_8_bit_initialize@l_data_counter^0,c
  1555  0004'                    
  1556                           ;ECU_Layer/LCD/ecu_LCD.c: 138:  if(lcd == ((void*)0)){
  1557  0004' 5000'              	movf	lcd_8_bit_initialize@lcd^0,w,c
  1558  0006' 1000'              	iorwf	(lcd_8_bit_initialize@lcd+1)^0,w,c
  1559  0008' A4D8               	btfss	status,2,c
  1560  000A' EF00' F000'        	goto	u1041
  1561  000E' EF00' F000'        	goto	u1040
  1562  0012'                    u1041:
  1563  0012' EF00' F000'        	goto	l1973
  1564  0016'                    u1040:
  1565  0016'                    
  1566                           ;ECU_Layer/LCD/ecu_LCD.c: 139:      ret = (Std_ReturnType)0x00;
  1567  0016' 0E00               	movlw	0
  1568  0018' 6E00'              	movwf	lcd_8_bit_initialize@ret^0,c
  1569                           
  1570                           ;ECU_Layer/LCD/ecu_LCD.c: 140:  }
  1571  001A' EF00' F000'        	goto	l2009
  1572  001E'                    l1973:
  1573                           
  1574                           ;ECU_Layer/LCD/ecu_LCD.c: 142:      ret = gpio_pin_intialize(&(lcd->lcd_rs));
  1575  001E' C017' F00A'        	movff	lcd_8_bit_initialize@lcd,gpio_pin_intialize@pin_config
  1576  0022' C018' F00B'        	movff	lcd_8_bit_initialize@lcd+1,gpio_pin_intialize@pin_config+1
  1577  0026' EC00' F000'        	call	_gpio_pin_intialize	;wreg free
  1578  002A' 6E00'              	movwf	lcd_8_bit_initialize@ret^0,c
  1579                           
  1580                           ;ECU_Layer/LCD/ecu_LCD.c: 143:      ret = gpio_pin_intialize(&(lcd->lcd_en));
  1581  002C' 0E01               	movlw	1
  1582  002E' 2400'              	addwf	lcd_8_bit_initialize@lcd^0,w,c
  1583  0030' 6E00'              	movwf	gpio_pin_intialize@pin_config^0,c
  1584  0032' 0E00               	movlw	0
  1585  0034' 2000'              	addwfc	(lcd_8_bit_initialize@lcd+1)^0,w,c
  1586  0036' 6E00'              	movwf	(gpio_pin_intialize@pin_config+1)^0,c
  1587  0038' EC00' F000'        	call	_gpio_pin_intialize	;wreg free
  1588  003C' 6E00'              	movwf	lcd_8_bit_initialize@ret^0,c
  1589  003E'                    
  1590                           ;ECU_Layer/LCD/ecu_LCD.c: 144:      for(l_data_counter = 0; l_data_counter < 8 ; l_data_
      +                          counter++){
  1591  003E' 0E00               	movlw	0
  1592  0040' 6E00'              	movwf	lcd_8_bit_initialize@l_data_counter^0,c
  1593  0042'                    l1981:
  1594  0042' 5000'              	movf	lcd_8_bit_initialize@l_data_counter^0,w,c
  1595  0044' 2400'              	addwf	lcd_8_bit_initialize@lcd^0,w,c
  1596  0046' 6E00'              	movwf	??_lcd_8_bit_initialize^0,c
  1597  0048' 0E00               	movlw	0
  1598  004A' 2000'              	addwfc	(lcd_8_bit_initialize@lcd+1)^0,w,c
  1599  004C' 6E00'              	movwf	(??_lcd_8_bit_initialize+1)^0,c
  1600  004E' 0E02               	movlw	2
  1601  0050' 2400'              	addwf	??_lcd_8_bit_initialize^0,w,c
  1602  0052' 6E00'              	movwf	gpio_pin_intialize@pin_config^0,c
  1603  0054' 0E00               	movlw	0
  1604  0056' 2000'              	addwfc	(??_lcd_8_bit_initialize+1)^0,w,c
  1605  0058' 6E00'              	movwf	(gpio_pin_intialize@pin_config+1)^0,c
  1606  005A' EC00' F000'        	call	_gpio_pin_intialize	;wreg free
  1607  005E'                    
  1608                           ;ECU_Layer/LCD/ecu_LCD.c: 146:      }
  1609  005E' 2A00'              	incf	lcd_8_bit_initialize@l_data_counter^0,f,c
  1610  0060' 0E07               	movlw	7
  1611  0062' 6400'              	cpfsgt	lcd_8_bit_initialize@l_data_counter^0,c
  1612  0064' EF00' F000'        	goto	u1051
  1613  0068' EF00' F000'        	goto	u1050
  1614  006C'                    u1051:
  1615  006C' EF00' F000'        	goto	l1981
  1616  0070'                    u1050:
  1617  0070'                    
  1618                           ;ECU_Layer/LCD/ecu_LCD.c: 147:      _delay((unsigned long)((20)*(8000000UL/4000.0)));
  1619  0070' 0E34               	movlw	52
  1620  0072' 6E00'              	movwf	??_lcd_8_bit_initialize^0,c
  1621  0074' 0EF2               	movlw	242
  1622  0076'                    u1587:
  1623  0076' 2EE8               	decfsz	wreg,f,c
  1624  0078' D7FE               	bra	u1587
  1625  007A' 2E00'              	decfsz	??_lcd_8_bit_initialize^0,f,c
  1626  007C' D7FC               	bra	u1587
  1627  007E' C017' F00E'        	movff	lcd_8_bit_initialize@lcd,lcd_8_bit_send_command@lcd
  1628  0082' C018' F00F'        	movff	lcd_8_bit_initialize@lcd+1,lcd_8_bit_send_command@lcd+1
  1629  0086' 0E38               	movlw	56
  1630  0088' 6E00'              	movwf	lcd_8_bit_send_command@command^0,c
  1631  008A' EC00' F000'        	call	_lcd_8_bit_send_command	;wreg free
  1632  008E'                    
  1633                           ;ECU_Layer/LCD/ecu_LCD.c: 149:      _delay((unsigned long)((5)*(8000000UL/4000.0)));
  1634  008E' 0E0D               	movlw	13
  1635  0090' 6E00'              	movwf	??_lcd_8_bit_initialize^0,c
  1636  0092' 0EFC               	movlw	252
  1637  0094'                    u1597:
  1638  0094' 2EE8               	decfsz	wreg,f,c
  1639  0096' D7FE               	bra	u1597
  1640  0098' 2E00'              	decfsz	??_lcd_8_bit_initialize^0,f,c
  1641  009A' D7FC               	bra	u1597
  1642  009C' C017' F00E'        	movff	lcd_8_bit_initialize@lcd,lcd_8_bit_send_command@lcd
  1643  00A0' C018' F00F'        	movff	lcd_8_bit_initialize@lcd+1,lcd_8_bit_send_command@lcd+1
  1644  00A4' 0E38               	movlw	56
  1645  00A6' 6E00'              	movwf	lcd_8_bit_send_command@command^0,c
  1646  00A8' EC00' F000'        	call	_lcd_8_bit_send_command	;wreg free
  1647  00AC'                    
  1648                           ;ECU_Layer/LCD/ecu_LCD.c: 151:      _delay((unsigned long)((150)*(8000000UL/4000000.0)))
      +                          ;
  1649  00AC' 0E64               	movlw	100
  1650  00AE'                    u1607:
  1651  00AE' 2EE8               	decfsz	wreg,f,c
  1652  00B0' D7FE               	bra	u1607
  1653  00B2' C017' F00E'        	movff	lcd_8_bit_initialize@lcd,lcd_8_bit_send_command@lcd
  1654  00B6' C018' F00F'        	movff	lcd_8_bit_initialize@lcd+1,lcd_8_bit_send_command@lcd+1
  1655  00BA' 0E38               	movlw	56
  1656  00BC' 6E00'              	movwf	lcd_8_bit_send_command@command^0,c
  1657  00BE' EC00' F000'        	call	_lcd_8_bit_send_command	;wreg free
  1658  00C2' C017' F00E'        	movff	lcd_8_bit_initialize@lcd,lcd_8_bit_send_command@lcd
  1659  00C6' C018' F00F'        	movff	lcd_8_bit_initialize@lcd+1,lcd_8_bit_send_command@lcd+1
  1660  00CA' 0E01               	movlw	1
  1661  00CC' 6E00'              	movwf	lcd_8_bit_send_command@command^0,c
  1662  00CE' EC00' F000'        	call	_lcd_8_bit_send_command	;wreg free
  1663  00D2' C017' F00E'        	movff	lcd_8_bit_initialize@lcd,lcd_8_bit_send_command@lcd
  1664  00D6' C018' F00F'        	movff	lcd_8_bit_initialize@lcd+1,lcd_8_bit_send_command@lcd+1
  1665  00DA' 0E02               	movlw	2
  1666  00DC' 6E00'              	movwf	lcd_8_bit_send_command@command^0,c
  1667  00DE' EC00' F000'        	call	_lcd_8_bit_send_command	;wreg free
  1668  00E2' C017' F00E'        	movff	lcd_8_bit_initialize@lcd,lcd_8_bit_send_command@lcd
  1669  00E6' C018' F00F'        	movff	lcd_8_bit_initialize@lcd+1,lcd_8_bit_send_command@lcd+1
  1670  00EA' 0E06               	movlw	6
  1671  00EC' 6E00'              	movwf	lcd_8_bit_send_command@command^0,c
  1672  00EE' EC00' F000'        	call	_lcd_8_bit_send_command	;wreg free
  1673  00F2' C017' F00E'        	movff	lcd_8_bit_initialize@lcd,lcd_8_bit_send_command@lcd
  1674  00F6' C018' F00F'        	movff	lcd_8_bit_initialize@lcd+1,lcd_8_bit_send_command@lcd+1
  1675  00FA' 0E0C               	movlw	12
  1676  00FC' 6E00'              	movwf	lcd_8_bit_send_command@command^0,c
  1677  00FE' EC00' F000'        	call	_lcd_8_bit_send_command	;wreg free
  1678  0102' C017' F00E'        	movff	lcd_8_bit_initialize@lcd,lcd_8_bit_send_command@lcd
  1679  0106' C018' F00F'        	movff	lcd_8_bit_initialize@lcd+1,lcd_8_bit_send_command@lcd+1
  1680  010A' 0E38               	movlw	56
  1681  010C' 6E00'              	movwf	lcd_8_bit_send_command@command^0,c
  1682  010E' EC00' F000'        	call	_lcd_8_bit_send_command	;wreg free
  1683  0112'                    
  1684                           ;ECU_Layer/LCD/ecu_LCD.c: 159:       ret = lcd_8_bit_send_command(lcd,0x80);
  1685  0112' C017' F00E'        	movff	lcd_8_bit_initialize@lcd,lcd_8_bit_send_command@lcd
  1686  0116' C018' F00F'        	movff	lcd_8_bit_initialize@lcd+1,lcd_8_bit_send_command@lcd+1
  1687  011A' 0E80               	movlw	128
  1688  011C' 6E00'              	movwf	lcd_8_bit_send_command@command^0,c
  1689  011E' EC00' F000'        	call	_lcd_8_bit_send_command	;wreg free
  1690  0122' 6E00'              	movwf	lcd_8_bit_initialize@ret^0,c
  1691  0124'                    l2009:
  1692                           
  1693                           ;ECU_Layer/LCD/ecu_LCD.c: 162:  return ret;
  1694  0124' 5000'              	movf	lcd_8_bit_initialize@ret^0,w,c
  1695  0126' 0012               	return		;funcret
  1696  0128'                    __end_of_lcd_8_bit_initialize:
  1697                           	callstack 0
  1698                           
  1699 ;; *************** function _lcd_8_bit_send_command *****************
  1700 ;; Defined at:
  1701 ;;		line 172 in file "ECU_Layer/LCD/ecu_LCD.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;  lcd             2   14[COMRAM] PTR const struct .
  1704 ;;		 -> lcd_2(10), lcd_1(6), 
  1705 ;;  command         1   16[COMRAM] unsigned char 
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;  l_command_co    1   22[COMRAM] unsigned char 
  1708 ;;  ret             1   21[COMRAM] unsigned char 
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  1    wreg      unsigned char 
  1711 ;; Registers used:
  1712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1718 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1719 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1720 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1721 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1722 ;;Total ram usage:        9 bytes
  1723 ;; Hardware stack levels used: 1
  1724 ;; Hardware stack levels required when called: 2
  1725 ;; This function calls:
  1726 ;;		_gpio_pin_write_logic
  1727 ;;		_lcd_8bit_send_enable_signal
  1728 ;; This function is called by:
  1729 ;;		_lcd_8_bit_initialize
  1730 ;; This function uses a non-reentrant model
  1731 ;;
  1732                           
  1733                           	psect	text12
  1734  0000'                    __ptext12:
  1735                           	callstack 0
  1736  0000'                    _lcd_8_bit_send_command:
  1737                           	callstack 25
  1738  0000'                    
  1739                           ;ECU_Layer/LCD/ecu_LCD.c: 174:  uint_8 l_command_counter =0 ;
  1740  0000' 0E00               	movlw	0
  1741  0002' 6E00'              	movwf	lcd_8_bit_send_command@l_command_counter^0,c
  1742  0004'                    
  1743                           ;ECU_Layer/LCD/ecu_LCD.c: 175:  if(lcd == ((void*)0)){
  1744  0004' 5000'              	movf	lcd_8_bit_send_command@lcd^0,w,c
  1745  0006' 1000'              	iorwf	(lcd_8_bit_send_command@lcd+1)^0,w,c
  1746  0008' A4D8               	btfss	status,2,c
  1747  000A' EF00' F000'        	goto	u1011
  1748  000E' EF00' F000'        	goto	u1010
  1749  0012'                    u1011:
  1750  0012' EF00' F000'        	goto	l1947
  1751  0016'                    u1010:
  1752  0016'                    
  1753                           ;ECU_Layer/LCD/ecu_LCD.c: 176:      ret = (Std_ReturnType)0x00;
  1754  0016' 0E00               	movlw	0
  1755  0018' 6E00'              	movwf	lcd_8_bit_send_command@ret^0,c
  1756                           
  1757                           ;ECU_Layer/LCD/ecu_LCD.c: 177:  }
  1758  001A' EF00' F000'        	goto	l1963
  1759  001E'                    l1947:
  1760  001E' C00E' F000'        	movff	lcd_8_bit_send_command@lcd,gpio_pin_write_logic@pin_config
  1761  0022' C00F' F001'        	movff	lcd_8_bit_send_command@lcd+1,gpio_pin_write_logic@pin_config+1
  1762  0026' 0E00               	movlw	0
  1763  0028' 6E00'              	movwf	gpio_pin_write_logic@logic^0,c
  1764  002A' EC00' F000'        	call	_gpio_pin_write_logic	;wreg free
  1765  002E'                    
  1766                           ;ECU_Layer/LCD/ecu_LCD.c: 180:    for(l_command_counter = 0 ; l_command_counter < 8; l_c
      +                          ommand_counter++){
  1767  002E' 0E00               	movlw	0
  1768  0030' 6E00'              	movwf	lcd_8_bit_send_command@l_command_counter^0,c
  1769  0032'                    l1955:
  1770  0032' 5000'              	movf	lcd_8_bit_send_command@l_command_counter^0,w,c
  1771  0034' 2400'              	addwf	lcd_8_bit_send_command@lcd^0,w,c
  1772  0036' 6E00'              	movwf	??_lcd_8_bit_send_command^0,c
  1773  0038' 0E00               	movlw	0
  1774  003A' 2000'              	addwfc	(lcd_8_bit_send_command@lcd+1)^0,w,c
  1775  003C' 6E00'              	movwf	(??_lcd_8_bit_send_command+1)^0,c
  1776  003E' 0E02               	movlw	2
  1777  0040' 2400'              	addwf	??_lcd_8_bit_send_command^0,w,c
  1778  0042' 6E00'              	movwf	gpio_pin_write_logic@pin_config^0,c
  1779  0044' 0E00               	movlw	0
  1780  0046' 2000'              	addwfc	(??_lcd_8_bit_send_command+1)^0,w,c
  1781  0048' 6E00'              	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1782  004A' C016' F013'        	movff	lcd_8_bit_send_command@l_command_counter,??_lcd_8_bit_send_command+2
  1783  004E' C010' F014'        	movff	lcd_8_bit_send_command@command,??_lcd_8_bit_send_command+3
  1784  0052' 2A00'              	incf	(??_lcd_8_bit_send_command+2)^0,f,c
  1785  0054' EF00' F000'        	goto	u1024
  1786  0058'                    u1025:
  1787  0058' 90D8               	bcf	status,0,c
  1788  005A' 3600'              	rlcf	(??_lcd_8_bit_send_command+3)^0,f,c
  1789  005C'                    u1024:
  1790  005C' 2E00'              	decfsz	(??_lcd_8_bit_send_command+2)^0,f,c
  1791  005E' EF00' F000'        	goto	u1025
  1792  0062' 5000'              	movf	(??_lcd_8_bit_send_command+3)^0,w,c
  1793  0064' 0B01               	andlw	1
  1794  0066' 6E00'              	movwf	gpio_pin_write_logic@logic^0,c
  1795  0068' EC00' F000'        	call	_gpio_pin_write_logic	;wreg free
  1796  006C'                    
  1797                           ;ECU_Layer/LCD/ecu_LCD.c: 182:    }
  1798  006C' 2A00'              	incf	lcd_8_bit_send_command@l_command_counter^0,f,c
  1799  006E' 0E07               	movlw	7
  1800  0070' 6400'              	cpfsgt	lcd_8_bit_send_command@l_command_counter^0,c
  1801  0072' EF00' F000'        	goto	u1031
  1802  0076' EF00' F000'        	goto	u1030
  1803  007A'                    u1031:
  1804  007A' EF00' F000'        	goto	l1955
  1805  007E'                    u1030:
  1806  007E'                    
  1807                           ;ECU_Layer/LCD/ecu_LCD.c: 183:    ret = lcd_8bit_send_enable_signal(&lcd);
  1808  007E' 0E00'              	movlw	low lcd_8_bit_send_command@lcd
  1809  0080' 6E00'              	movwf	lcd_8bit_send_enable_signal@lcd^0,c
  1810  0082' 0E00'              	movlw	high lcd_8_bit_send_command@lcd
  1811  0084' 6E00'              	movwf	(lcd_8bit_send_enable_signal@lcd+1)^0,c
  1812  0086' EC00' F000'        	call	_lcd_8bit_send_enable_signal	;wreg free
  1813  008A' 6E00'              	movwf	lcd_8_bit_send_command@ret^0,c
  1814  008C'                    l1963:
  1815                           
  1816                           ;ECU_Layer/LCD/ecu_LCD.c: 186:  return ret;
  1817  008C' 5000'              	movf	lcd_8_bit_send_command@ret^0,w,c
  1818  008E' 0012               	return		;funcret
  1819  0090'                    __end_of_lcd_8_bit_send_command:
  1820                           	callstack 0
  1821                           
  1822 ;; *************** function _lcd_8bit_send_enable_signal *****************
  1823 ;; Defined at:
  1824 ;;		line 333 in file "ECU_Layer/LCD/ecu_LCD.c"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;  lcd             2   10[COMRAM] PTR const struct .
  1827 ;;		 -> lcd_8_bit_send_command@lcd(2), lcd_2(10), 
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;  ret             1   13[COMRAM] unsigned char 
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  1    wreg      unsigned char 
  1832 ;; Registers used:
  1833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1839 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1840 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1841 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1842 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1843 ;;Total ram usage:        4 bytes
  1844 ;; Hardware stack levels used: 1
  1845 ;; Hardware stack levels required when called: 1
  1846 ;; This function calls:
  1847 ;;		_gpio_pin_write_logic
  1848 ;; This function is called by:
  1849 ;;		_lcd_8_bit_send_command
  1850 ;;		_lcd_8_bit_send_char_data
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854                           	psect	text13
  1855  0000'                    __ptext13:
  1856                           	callstack 0
  1857  0000'                    _lcd_8bit_send_enable_signal:
  1858                           	callstack 26
  1859  0000' 0E01               	movlw	1
  1860  0002' 2400'              	addwf	lcd_8bit_send_enable_signal@lcd^0,w,c
  1861  0004' 6E00'              	movwf	gpio_pin_write_logic@pin_config^0,c
  1862  0006' 0E00               	movlw	0
  1863  0008' 2000'              	addwfc	(lcd_8bit_send_enable_signal@lcd+1)^0,w,c
  1864  000A' 6E00'              	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1865  000C' 0E01               	movlw	1
  1866  000E' 6E00'              	movwf	gpio_pin_write_logic@logic^0,c
  1867  0010' EC00' F000'        	call	_gpio_pin_write_logic	;wreg free
  1868  0014'                    
  1869                           ;ECU_Layer/LCD/ecu_LCD.c: 337: _delay((unsigned long)((50)*(8000000UL/4000.0)));
  1870  0014' 0E82               	movlw	130
  1871  0016' 6E00'              	movwf	??_lcd_8bit_send_enable_signal^0,c
  1872  0018' 0EDE               	movlw	222
  1873  001A'                    u1617:
  1874  001A' 2EE8               	decfsz	wreg,f,c
  1875  001C' D7FE               	bra	u1617
  1876  001E' 2E00'              	decfsz	??_lcd_8bit_send_enable_signal^0,f,c
  1877  0020' D7FC               	bra	u1617
  1878  0022'                    
  1879                           ;ECU_Layer/LCD/ecu_LCD.c: 338:  ret = gpio_pin_write_logic(&(lcd->lcd_en) ,LOW);
  1880  0022' 0E01               	movlw	1
  1881  0024' 2400'              	addwf	lcd_8bit_send_enable_signal@lcd^0,w,c
  1882  0026' 6E00'              	movwf	gpio_pin_write_logic@pin_config^0,c
  1883  0028' 0E00               	movlw	0
  1884  002A' 2000'              	addwfc	(lcd_8bit_send_enable_signal@lcd+1)^0,w,c
  1885  002C' 6E00'              	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1886  002E' 0E00               	movlw	0
  1887  0030' 6E00'              	movwf	gpio_pin_write_logic@logic^0,c
  1888  0032' EC00' F000'        	call	_gpio_pin_write_logic	;wreg free
  1889  0036' 6E00'              	movwf	lcd_8bit_send_enable_signal@ret^0,c
  1890  0038'                    
  1891                           ;ECU_Layer/LCD/ecu_LCD.c: 339:  return ret;
  1892  0038' 5000'              	movf	lcd_8bit_send_enable_signal@ret^0,w,c
  1893  003A' 0012               	return		;funcret
  1894  003C'                    __end_of_lcd_8bit_send_enable_signal:
  1895                           	callstack 0
  1896                           
  1897 ;; *************** function _gpio_pin_intialize *****************
  1898 ;; Defined at:
  1899 ;;		line 126 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;  pin_config      2   10[COMRAM] PTR const struct .
  1902 ;;		 -> lcd_2.lcd_data(8), lcd_2(10), Relay_Initialize@pin_obj(1), led_initialize@pin_obj(1), 
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;  ret             1   13[COMRAM] unsigned char 
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      unsigned char 
  1907 ;; Registers used:
  1908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1914 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1915 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1916 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1917 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1918 ;;Total ram usage:        4 bytes
  1919 ;; Hardware stack levels used: 1
  1920 ;; Hardware stack levels required when called: 1
  1921 ;; This function calls:
  1922 ;;		_gpio_pin_direction_intialize
  1923 ;;		_gpio_pin_write_logic
  1924 ;; This function is called by:
  1925 ;;		_lcd_8_bit_initialize
  1926 ;;		_segment_initialize
  1927 ;;		_keypade_initialize
  1928 ;;		_led_initialize
  1929 ;;		_DC_Motor_Intialize
  1930 ;;		_Relay_Initialize
  1931 ;;		_lcd_4_bit_initialize
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           	psect	text14
  1936  0000'                    __ptext14:
  1937                           	callstack 0
  1938  0000'                    _gpio_pin_intialize:
  1939                           	callstack 26
  1940  0000'                    
  1941                           ;MCAL_Layer/GPIO/hal_gpio.c: 128:  if(pin_config == ((void*)0) || pin_config->pin > 8 -1
      +                          ){
  1942  0000' 5000'              	movf	gpio_pin_intialize@pin_config^0,w,c
  1943  0002' 1000'              	iorwf	(gpio_pin_intialize@pin_config+1)^0,w,c
  1944  0004' B4D8               	btfsc	status,2,c
  1945  0006' EF00' F000'        	goto	u991
  1946  000A' EF00' F000'        	goto	u990
  1947  000E'                    u991:
  1948  000E' EF00' F000'        	goto	l1933
  1949  0012'                    u990:
  1950  0012' C00A' FFD9         	movff	gpio_pin_intialize@pin_config,fsr2l
  1951  0016' C00B' FFDA         	movff	gpio_pin_intialize@pin_config+1,fsr2h
  1952  001A' 30DF               	rrcf	223,w,c
  1953  001C' 32E8               	rrcf	wreg,f,c
  1954  001E' 32E8               	rrcf	wreg,f,c
  1955  0020' 0B07               	andlw	7
  1956  0022' 6E00'              	movwf	??_gpio_pin_intialize^0,c
  1957  0024' 0E07               	movlw	7
  1958  0026' 6400'              	cpfsgt	??_gpio_pin_intialize^0,c
  1959  0028' EF00' F000'        	goto	u1001
  1960  002C' EF00' F000'        	goto	u1000
  1961  0030'                    u1001:
  1962  0030' EF00' F000'        	goto	l1935
  1963  0034'                    u1000:
  1964  0034'                    l1933:
  1965                           
  1966                           ;MCAL_Layer/GPIO/hal_gpio.c: 129:      ret = (Std_ReturnType)0x00;
  1967  0034' 0E00               	movlw	0
  1968  0036' 6E00'              	movwf	gpio_pin_intialize@ret^0,c
  1969                           
  1970                           ;MCAL_Layer/GPIO/hal_gpio.c: 130:  }
  1971  0038' EF00' F000'        	goto	l1937
  1972  003C'                    l1935:
  1973                           
  1974                           ;MCAL_Layer/GPIO/hal_gpio.c: 132:      ret = gpio_pin_direction_intialize(pin_config);
  1975  003C' C00A' F000'        	movff	gpio_pin_intialize@pin_config,gpio_pin_direction_intialize@pin_config
  1976  0040' C00B' F001'        	movff	gpio_pin_intialize@pin_config+1,gpio_pin_direction_intialize@pin_config+1
  1977  0044' EC00' F000'        	call	_gpio_pin_direction_intialize	;wreg free
  1978  0048' 6E00'              	movwf	gpio_pin_intialize@ret^0,c
  1979                           
  1980                           ;MCAL_Layer/GPIO/hal_gpio.c: 133:      ret = gpio_pin_write_logic(pin_config, pin_config
      +                          ->logic);
  1981  004A' C00A' F000'        	movff	gpio_pin_intialize@pin_config,gpio_pin_write_logic@pin_config
  1982  004E' C00B' F001'        	movff	gpio_pin_intialize@pin_config+1,gpio_pin_write_logic@pin_config+1
  1983  0052' C00A' FFD9         	movff	gpio_pin_intialize@pin_config,fsr2l
  1984  0056' C00B' FFDA         	movff	gpio_pin_intialize@pin_config+1,fsr2h
  1985  005A' 0E00               	movlw	0
  1986  005C' BEDF               	btfsc	indf2,7,c
  1987  005E' 0E01               	movlw	1
  1988  0060' 6E00'              	movwf	gpio_pin_write_logic@logic^0,c
  1989  0062' EC00' F000'        	call	_gpio_pin_write_logic	;wreg free
  1990  0066' 6E00'              	movwf	gpio_pin_intialize@ret^0,c
  1991  0068'                    l1937:
  1992                           
  1993                           ;MCAL_Layer/GPIO/hal_gpio.c: 135:   return ret;
  1994  0068' 5000'              	movf	gpio_pin_intialize@ret^0,w,c
  1995  006A' 0012               	return		;funcret
  1996  006C'                    __end_of_gpio_pin_intialize:
  1997                           	callstack 0
  1998                           
  1999 ;; *************** function _gpio_pin_write_logic *****************
  2000 ;; Defined at:
  2001 ;;		line 59 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;  pin_config      2    0[COMRAM] PTR const struct .
  2004 ;;		 -> lcd_4_bit_send_command@lcd.lcd_data(8), lcd_4_bit_send_char_data@lcd.lcd_data(8), lcd_1.lcd_data(8), lcd_8_bit_s
      +end_command@lcd(2), 
  2005 ;;		 -> lcd_4_bit_send_char_data@lcd(2), lcd_4_bit_send_command@lcd(2), lcd_2.lcd_data(8), lcd_2(10), 
  2006 ;;		 -> lcd_1(6), Relay_Turn_OFF@pin_obj(1), Relay_Turn_ON@pin_obj(1), Relay_Initialize@pin_obj(1), 
  2007 ;;		 -> led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  2008 ;;  logic           1    2[COMRAM] enum E2801
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;  ret             1    9[COMRAM] unsigned char 
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  1    wreg      unsigned char 
  2013 ;; Registers used:
  2014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2020 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2021 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2022 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2023 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2024 ;;Total ram usage:       10 bytes
  2025 ;; Hardware stack levels used: 1
  2026 ;; This function calls:
  2027 ;;		Nothing
  2028 ;; This function is called by:
  2029 ;;		_gpio_pin_intialize
  2030 ;;		_lcd_4_bit_send_command
  2031 ;;		_lcd_8_bit_send_command
  2032 ;;		_lcd_8_bit_send_char_data
  2033 ;;		_send_4bit_data
  2034 ;;		_lcd_4bit_send_enable_signal
  2035 ;;		_lcd_8bit_send_enable_signal
  2036 ;;		_segment_write_data
  2037 ;;		_keypade_get_value
  2038 ;;		_led_turn_on
  2039 ;;		_led_turn_off
  2040 ;;		_DC_Motor_Move_Right
  2041 ;;		_DC_Motor_Move_Left
  2042 ;;		_DC_Motor_Stop
  2043 ;;		_Relay_Turn_ON
  2044 ;;		_Relay_Turn_OFF
  2045 ;;		_lcd_4_bit_send_char_data
  2046 ;; This function uses a non-reentrant model
  2047 ;;
  2048                           
  2049                           	psect	text15
  2050  0000'                    __ptext15:
  2051                           	callstack 0
  2052  0000'                    _gpio_pin_write_logic:
  2053                           	callstack 26
  2054  0000'                    
  2055                           ;MCAL_Layer/GPIO/hal_gpio.c: 60:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2056  0000' 0E01               	movlw	1
  2057  0002' 6E00'              	movwf	gpio_pin_write_logic@ret^0,c
  2058  0004'                    
  2059                           ;MCAL_Layer/GPIO/hal_gpio.c: 61:       if(pin_config == ((void*)0) || logic == ((void*)0
      +                          ) || pin_config->pin > 8 -1){
  2060  0004' 5000'              	movf	gpio_pin_write_logic@pin_config^0,w,c
  2061  0006' 1000'              	iorwf	(gpio_pin_write_logic@pin_config+1)^0,w,c
  2062  0008' B4D8               	btfsc	status,2,c
  2063  000A' EF00' F000'        	goto	u881
  2064  000E' EF00' F000'        	goto	u880
  2065  0012'                    u881:
  2066  0012' EF00' F000'        	goto	l1873
  2067  0016'                    u880:
  2068  0016' 5000'              	movf	gpio_pin_write_logic@logic^0,w,c
  2069  0018' B4D8               	btfsc	status,2,c
  2070  001A' EF00' F000'        	goto	u891
  2071  001E' EF00' F000'        	goto	u890
  2072  0022'                    u891:
  2073  0022' EF00' F000'        	goto	l1873
  2074  0026'                    u890:
  2075  0026' C000' FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  2076  002A' C001' FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  2077  002E' 30DF               	rrcf	223,w,c
  2078  0030' 32E8               	rrcf	wreg,f,c
  2079  0032' 32E8               	rrcf	wreg,f,c
  2080  0034' 0B07               	andlw	7
  2081  0036' 6E00'              	movwf	??_gpio_pin_write_logic^0,c
  2082  0038' 0E07               	movlw	7
  2083  003A' 6400'              	cpfsgt	??_gpio_pin_write_logic^0,c
  2084  003C' EF00' F000'        	goto	u901
  2085  0040' EF00' F000'        	goto	u900
  2086  0044'                    u901:
  2087  0044' EF00' F000'        	goto	l1881
  2088  0048'                    u900:
  2089  0048'                    l1873:
  2090                           
  2091                           ;MCAL_Layer/GPIO/hal_gpio.c: 62:      ret = (Std_ReturnType)0x00;
  2092  0048' 0E00               	movlw	0
  2093  004A' 6E00'              	movwf	gpio_pin_write_logic@ret^0,c
  2094                           
  2095                           ;MCAL_Layer/GPIO/hal_gpio.c: 63:  }
  2096  004C' EF00' F000'        	goto	l1883
  2097  0050'                    l1875:
  2098                           
  2099                           ;MCAL_Layer/GPIO/hal_gpio.c: 68:            (*lat_registers[pin_config->port] &= ~(1<<pi
      +                          n_config->pin));
  2100  0050' C000' FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  2101  0054' C001' FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  2102  0058' 30DF               	rrcf	223,w,c
  2103  005A' 32E8               	rrcf	wreg,f,c
  2104  005C' 32E8               	rrcf	wreg,f,c
  2105  005E' 0B07               	andlw	7
  2106  0060' 6E00'              	movwf	??_gpio_pin_write_logic^0,c
  2107  0062' 0E01               	movlw	1
  2108  0064' 6E00'              	movwf	(??_gpio_pin_write_logic+1)^0,c
  2109  0066' 2A00'              	incf	??_gpio_pin_write_logic^0,f,c
  2110  0068' EF00' F000'        	goto	u914
  2111  006C'                    u915:
  2112  006C' 90D8               	bcf	status,0,c
  2113  006E' 3600'              	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2114  0070'                    u914:
  2115  0070' 2E00'              	decfsz	??_gpio_pin_write_logic^0,f,c
  2116  0072' EF00' F000'        	goto	u915
  2117  0076' 5000'              	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2118  0078' 0AFF               	xorlw	255
  2119  007A' 6E00'              	movwf	(??_gpio_pin_write_logic+2)^0,c
  2120  007C' C000' FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  2121  0080' C001' FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  2122  0084' 50DF               	movf	223,w,c
  2123  0086' 0B07               	andlw	7
  2124  0088' 6E00'              	movwf	(??_gpio_pin_write_logic+3)^0,c
  2125  008A' 5000'              	movf	(??_gpio_pin_write_logic+3)^0,w,c
  2126  008C' 0D02               	mullw	2
  2127  008E' 0E00'              	movlw	low _lat_registers
  2128  0090' 24F3               	addwf	243,w,c
  2129  0092' 6ED9               	movwf	fsr2l,c
  2130  0094' 0E00'              	movlw	high _lat_registers
  2131  0096' 20F4               	addwfc	prodh,w,c
  2132  0098' 6EDA               	movwf	fsr2h,c
  2133  009A' CFDE F007'         	movff	postinc2,??_gpio_pin_write_logic+4
  2134  009E' CFDD F008'         	movff	postdec2,??_gpio_pin_write_logic+5
  2135  00A2' C007' FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  2136  00A6' C008' FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  2137  00AA' 5000'              	movf	(??_gpio_pin_write_logic+2)^0,w,c
  2138  00AC' 16DF               	andwf	indf2,f,c
  2139                           
  2140                           ;MCAL_Layer/GPIO/hal_gpio.c: 69:            break;
  2141  00AE' EF00' F000'        	goto	l1883
  2142  00B2'                    l1877:
  2143                           
  2144                           ;MCAL_Layer/GPIO/hal_gpio.c: 71:            (*lat_registers[pin_config->port] |= (1<<pin
      +                          _config->pin));
  2145  00B2' C000' FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  2146  00B6' C001' FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  2147  00BA' 30DF               	rrcf	223,w,c
  2148  00BC' 32E8               	rrcf	wreg,f,c
  2149  00BE' 32E8               	rrcf	wreg,f,c
  2150  00C0' 0B07               	andlw	7
  2151  00C2' 6E00'              	movwf	??_gpio_pin_write_logic^0,c
  2152  00C4' 0E01               	movlw	1
  2153  00C6' 6E00'              	movwf	(??_gpio_pin_write_logic+1)^0,c
  2154  00C8' 2A00'              	incf	??_gpio_pin_write_logic^0,f,c
  2155  00CA' EF00' F000'        	goto	u924
  2156  00CE'                    u925:
  2157  00CE' 90D8               	bcf	status,0,c
  2158  00D0' 3600'              	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  2159  00D2'                    u924:
  2160  00D2' 2E00'              	decfsz	??_gpio_pin_write_logic^0,f,c
  2161  00D4' EF00' F000'        	goto	u925
  2162  00D8' C000' FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  2163  00DC' C001' FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  2164  00E0' 50DF               	movf	223,w,c
  2165  00E2' 0B07               	andlw	7
  2166  00E4' 6E00'              	movwf	(??_gpio_pin_write_logic+2)^0,c
  2167  00E6' 5000'              	movf	(??_gpio_pin_write_logic+2)^0,w,c
  2168  00E8' 0D02               	mullw	2
  2169  00EA' 0E00'              	movlw	low _lat_registers
  2170  00EC' 24F3               	addwf	243,w,c
  2171  00EE' 6ED9               	movwf	fsr2l,c
  2172  00F0' 0E00'              	movlw	high _lat_registers
  2173  00F2' 20F4               	addwfc	prodh,w,c
  2174  00F4' 6EDA               	movwf	fsr2h,c
  2175  00F6' CFDE F006'         	movff	postinc2,??_gpio_pin_write_logic+3
  2176  00FA' CFDD F007'         	movff	postdec2,??_gpio_pin_write_logic+4
  2177  00FE' C006' FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  2178  0102' C007' FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  2179  0106' 5000'              	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2180  0108' 12DF               	iorwf	indf2,f,c
  2181                           
  2182                           ;MCAL_Layer/GPIO/hal_gpio.c: 72:            break;
  2183  010A' EF00' F000'        	goto	l1883
  2184  010E'                    l1881:
  2185  010E' 5000'              	movf	gpio_pin_write_logic@logic^0,w,c
  2186  0110' 6E00'              	movwf	??_gpio_pin_write_logic^0,c
  2187  0112' 6A00'              	clrf	(??_gpio_pin_write_logic+1)^0,c
  2188                           
  2189                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2190                           ; Switch size 1, requested type "simple"
  2191                           ; Number of cases is 1, Range of values is 0 to 0
  2192                           ; switch strategies available:
  2193                           ; Name         Instructions Cycles
  2194                           ; simple_byte            4     3 (average)
  2195                           ;	Chosen strategy is simple_byte
  2196  0114' 5000'              	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2197  0116' 0A00               	xorlw	0	; case 0
  2198  0118' B4D8               	btfsc	status,2,c
  2199  011A' EF00' F000'        	goto	l2521
  2200  011E' EF00' F000'        	goto	l1873
  2201  0122'                    l2521:
  2202                           
  2203                           ; Switch size 1, requested type "simple"
  2204                           ; Number of cases is 2, Range of values is 0 to 1
  2205                           ; switch strategies available:
  2206                           ; Name         Instructions Cycles
  2207                           ; simple_byte            7     4 (average)
  2208                           ;	Chosen strategy is simple_byte
  2209  0122' 5000'              	movf	??_gpio_pin_write_logic^0,w,c
  2210  0124' 0A00               	xorlw	0	; case 0
  2211  0126' B4D8               	btfsc	status,2,c
  2212  0128' EF00' F000'        	goto	l1875
  2213  012C' 0A01               	xorlw	1	; case 1
  2214  012E' B4D8               	btfsc	status,2,c
  2215  0130' EF00' F000'        	goto	l1877
  2216  0134' EF00' F000'        	goto	l1873
  2217  0138'                    l1883:
  2218                           
  2219                           ;MCAL_Layer/GPIO/hal_gpio.c: 77:     return ret;
  2220  0138' 5000'              	movf	gpio_pin_write_logic@ret^0,w,c
  2221  013A' 0012               	return		;funcret
  2222  013C'                    __end_of_gpio_pin_write_logic:
  2223                           	callstack 0
  2224                           
  2225 ;; *************** function _gpio_pin_direction_intialize *****************
  2226 ;; Defined at:
  2227 ;;		line 14 in file "MCAL_Layer/GPIO/hal_gpio.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;  pin_config      2    0[COMRAM] PTR const struct .
  2230 ;;		 -> lcd_2.lcd_data(8), lcd_2(10), Relay_Initialize@pin_obj(1), led_initialize@pin_obj(1), 
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;  ret             1    8[COMRAM] unsigned char 
  2233 ;; Return value:  Size  Location     Type
  2234 ;;                  1    wreg      unsigned char 
  2235 ;; Registers used:
  2236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2242 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2243 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2244 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2245 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2246 ;;Total ram usage:        9 bytes
  2247 ;; Hardware stack levels used: 1
  2248 ;; This function calls:
  2249 ;;		Nothing
  2250 ;; This function is called by:
  2251 ;;		_gpio_pin_intialize
  2252 ;;		_Button_Initialize
  2253 ;;		_keypade_initialize
  2254 ;; This function uses a non-reentrant model
  2255 ;;
  2256                           
  2257                           	psect	text16
  2258  0000'                    __ptext16:
  2259                           	callstack 0
  2260  0000'                    _gpio_pin_direction_intialize:
  2261                           	callstack 26
  2262  0000'                    
  2263                           ;MCAL_Layer/GPIO/hal_gpio.c: 15:  Std_ReturnType ret = (Std_ReturnType)0x01;
  2264  0000' 0E01               	movlw	1
  2265  0002' 6E00'              	movwf	gpio_pin_direction_intialize@ret^0,c
  2266  0004'                    
  2267                           ;MCAL_Layer/GPIO/hal_gpio.c: 16:  if(pin_config == ((void*)0) || pin_config->pin > 8 -1)
      +                          {
  2268  0004' 5000'              	movf	gpio_pin_direction_intialize@pin_config^0,w,c
  2269  0006' 1000'              	iorwf	(gpio_pin_direction_intialize@pin_config+1)^0,w,c
  2270  0008' B4D8               	btfsc	status,2,c
  2271  000A' EF00' F000'        	goto	u931
  2272  000E' EF00' F000'        	goto	u930
  2273  0012'                    u931:
  2274  0012' EF00' F000'        	goto	l1897
  2275  0016'                    u930:
  2276  0016' C000' FFD9         	movff	gpio_pin_direction_intialize@pin_config,fsr2l
  2277  001A' C001' FFDA         	movff	gpio_pin_direction_intialize@pin_config+1,fsr2h
  2278  001E' 30DF               	rrcf	223,w,c
  2279  0020' 32E8               	rrcf	wreg,f,c
  2280  0022' 32E8               	rrcf	wreg,f,c
  2281  0024' 0B07               	andlw	7
  2282  0026' 6E00'              	movwf	??_gpio_pin_direction_intialize^0,c
  2283  0028' 0E07               	movlw	7
  2284  002A' 6400'              	cpfsgt	??_gpio_pin_direction_intialize^0,c
  2285  002C' EF00' F000'        	goto	u941
  2286  0030' EF00' F000'        	goto	u940
  2287  0034'                    u941:
  2288  0034' EF00' F000'        	goto	l1905
  2289  0038'                    u940:
  2290  0038'                    l1897:
  2291                           
  2292                           ;MCAL_Layer/GPIO/hal_gpio.c: 17:      ret = (Std_ReturnType)0x00;
  2293  0038' 0E00               	movlw	0
  2294  003A' 6E00'              	movwf	gpio_pin_direction_intialize@ret^0,c
  2295                           
  2296                           ;MCAL_Layer/GPIO/hal_gpio.c: 18:  }
  2297  003C' EF00' F000'        	goto	l1907
  2298  0040'                    l1899:
  2299                           
  2300                           ;MCAL_Layer/GPIO/hal_gpio.c: 22:            (*tris_registers[pin_config->port] &= ~(1<<p
      +                          in_config->pin));
  2301  0040' C000' FFD9         	movff	gpio_pin_direction_intialize@pin_config,fsr2l
  2302  0044' C001' FFDA         	movff	gpio_pin_direction_intialize@pin_config+1,fsr2h
  2303  0048' 30DF               	rrcf	223,w,c
  2304  004A' 32E8               	rrcf	wreg,f,c
  2305  004C' 32E8               	rrcf	wreg,f,c
  2306  004E' 0B07               	andlw	7
  2307  0050' 6E00'              	movwf	??_gpio_pin_direction_intialize^0,c
  2308  0052' 0E01               	movlw	1
  2309  0054' 6E00'              	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  2310  0056' 2A00'              	incf	??_gpio_pin_direction_intialize^0,f,c
  2311  0058' EF00' F000'        	goto	u954
  2312  005C'                    u955:
  2313  005C' 90D8               	bcf	status,0,c
  2314  005E' 3600'              	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  2315  0060'                    u954:
  2316  0060' 2E00'              	decfsz	??_gpio_pin_direction_intialize^0,f,c
  2317  0062' EF00' F000'        	goto	u955
  2318  0066' 5000'              	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2319  0068' 0AFF               	xorlw	255
  2320  006A' 6E00'              	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  2321  006C' C000' FFD9         	movff	gpio_pin_direction_intialize@pin_config,fsr2l
  2322  0070' C001' FFDA         	movff	gpio_pin_direction_intialize@pin_config+1,fsr2h
  2323  0074' 50DF               	movf	223,w,c
  2324  0076' 0B07               	andlw	7
  2325  0078' 6E00'              	movwf	(??_gpio_pin_direction_intialize+3)^0,c
  2326  007A' 5000'              	movf	(??_gpio_pin_direction_intialize+3)^0,w,c
  2327  007C' 0D02               	mullw	2
  2328  007E' 0E00'              	movlw	low _tris_registers
  2329  0080' 24F3               	addwf	243,w,c
  2330  0082' 6ED9               	movwf	fsr2l,c
  2331  0084' 0E00'              	movlw	high _tris_registers
  2332  0086' 20F4               	addwfc	prodh,w,c
  2333  0088' 6EDA               	movwf	fsr2h,c
  2334  008A' CFDE F006'         	movff	postinc2,??_gpio_pin_direction_intialize+4
  2335  008E' CFDD F007'         	movff	postdec2,??_gpio_pin_direction_intialize+5
  2336  0092' C006' FFD9         	movff	??_gpio_pin_direction_intialize+4,fsr2l
  2337  0096' C007' FFDA         	movff	??_gpio_pin_direction_intialize+5,fsr2h
  2338  009A' 5000'              	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  2339  009C' 16DF               	andwf	indf2,f,c
  2340                           
  2341                           ;MCAL_Layer/GPIO/hal_gpio.c: 23:            break;
  2342  009E' EF00' F000'        	goto	l1907
  2343  00A2'                    l1901:
  2344                           
  2345                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:            (*tris_registers[pin_config->port] |= (1<<pi
      +                          n_config->pin));
  2346  00A2' C000' FFD9         	movff	gpio_pin_direction_intialize@pin_config,fsr2l
  2347  00A6' C001' FFDA         	movff	gpio_pin_direction_intialize@pin_config+1,fsr2h
  2348  00AA' 30DF               	rrcf	223,w,c
  2349  00AC' 32E8               	rrcf	wreg,f,c
  2350  00AE' 32E8               	rrcf	wreg,f,c
  2351  00B0' 0B07               	andlw	7
  2352  00B2' 6E00'              	movwf	??_gpio_pin_direction_intialize^0,c
  2353  00B4' 0E01               	movlw	1
  2354  00B6' 6E00'              	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  2355  00B8' 2A00'              	incf	??_gpio_pin_direction_intialize^0,f,c
  2356  00BA' EF00' F000'        	goto	u964
  2357  00BE'                    u965:
  2358  00BE' 90D8               	bcf	status,0,c
  2359  00C0' 3600'              	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  2360  00C2'                    u964:
  2361  00C2' 2E00'              	decfsz	??_gpio_pin_direction_intialize^0,f,c
  2362  00C4' EF00' F000'        	goto	u965
  2363  00C8' C000' FFD9         	movff	gpio_pin_direction_intialize@pin_config,fsr2l
  2364  00CC' C001' FFDA         	movff	gpio_pin_direction_intialize@pin_config+1,fsr2h
  2365  00D0' 50DF               	movf	223,w,c
  2366  00D2' 0B07               	andlw	7
  2367  00D4' 6E00'              	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  2368  00D6' 5000'              	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  2369  00D8' 0D02               	mullw	2
  2370  00DA' 0E00'              	movlw	low _tris_registers
  2371  00DC' 24F3               	addwf	243,w,c
  2372  00DE' 6ED9               	movwf	fsr2l,c
  2373  00E0' 0E00'              	movlw	high _tris_registers
  2374  00E2' 20F4               	addwfc	prodh,w,c
  2375  00E4' 6EDA               	movwf	fsr2h,c
  2376  00E6' CFDE F005'         	movff	postinc2,??_gpio_pin_direction_intialize+3
  2377  00EA' CFDD F006'         	movff	postdec2,??_gpio_pin_direction_intialize+4
  2378  00EE' C005' FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  2379  00F2' C006' FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  2380  00F6' 5000'              	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2381  00F8' 12DF               	iorwf	indf2,f,c
  2382                           
  2383                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:            break;
  2384  00FA' EF00' F000'        	goto	l1907
  2385  00FE'                    l1905:
  2386  00FE' C000' FFD9         	movff	gpio_pin_direction_intialize@pin_config,fsr2l
  2387  0102' C001' FFDA         	movff	gpio_pin_direction_intialize@pin_config+1,fsr2h
  2388  0106' BCDF               	btfsc	indf2,6,c
  2389  0108' EF00' F000'        	goto	u971
  2390  010C' EF00' F000'        	goto	u970
  2391  0110'                    u971:
  2392  0110' 0E01               	movlw	1
  2393  0112' EF00' F000'        	goto	u980
  2394  0116'                    u970:
  2395  0116' 0E00               	movlw	0
  2396  0118'                    u980:
  2397  0118' 6E00'              	movwf	??_gpio_pin_direction_intialize^0,c
  2398  011A' 6A00'              	clrf	(??_gpio_pin_direction_intialize+1)^0,c
  2399                           
  2400                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2401                           ; Switch size 1, requested type "simple"
  2402                           ; Number of cases is 1, Range of values is 0 to 0
  2403                           ; switch strategies available:
  2404                           ; Name         Instructions Cycles
  2405                           ; simple_byte            4     3 (average)
  2406                           ;	Chosen strategy is simple_byte
  2407  011C' 5000'              	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  2408  011E' 0A00               	xorlw	0	; case 0
  2409  0120' B4D8               	btfsc	status,2,c
  2410  0122' EF00' F000'        	goto	l2523
  2411  0126' EF00' F000'        	goto	l1897
  2412  012A'                    l2523:
  2413                           
  2414                           ; Switch size 1, requested type "simple"
  2415                           ; Number of cases is 2, Range of values is 0 to 1
  2416                           ; switch strategies available:
  2417                           ; Name         Instructions Cycles
  2418                           ; simple_byte            7     4 (average)
  2419                           ;	Chosen strategy is simple_byte
  2420  012A' 5000'              	movf	??_gpio_pin_direction_intialize^0,w,c
  2421  012C' 0A00               	xorlw	0	; case 0
  2422  012E' B4D8               	btfsc	status,2,c
  2423  0130' EF00' F000'        	goto	l1899
  2424  0134' 0A01               	xorlw	1	; case 1
  2425  0136' B4D8               	btfsc	status,2,c
  2426  0138' EF00' F000'        	goto	l1901
  2427  013C' EF00' F000'        	goto	l1897
  2428  0140'                    l1907:
  2429                           
  2430                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:       return ret;
  2431  0140' 5000'              	movf	gpio_pin_direction_intialize@ret^0,w,c
  2432  0142' 0012               	return		;funcret
  2433  0144'                    __end_of_gpio_pin_direction_intialize:
  2434                           	callstack 0
  2435                           
  2436                           	psect	rparam
  2437  0000                     
  2438                           	psect	config
  2439                           
  2440                           ; Padding undefined space
  2441  300000                     	org	3145728
  2442  300000  FF                 	db	255
  2443                           
  2444                           ;Config register CONFIG1H @ 0x300001
  2445                           ;	Oscillator Selection bits
  2446                           ;	OSC = HS, HS oscillator
  2447                           ;	Fail-Safe Clock Monitor Enable bit
  2448                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2449                           ;	Internal/External Oscillator Switchover bit
  2450                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2451  300001                     	org	3145729
  2452  300001  02                 	db	2
  2453                           
  2454                           ;Config register CONFIG2L @ 0x300002
  2455                           ;	Power-up Timer Enable bit
  2456                           ;	PWRT = OFF, PWRT disabled
  2457                           ;	Brown-out Reset Enable bits
  2458                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2459                           ;	Brown Out Reset Voltage bits
  2460                           ;	BORV = 3, Minimum setting
  2461  300002                     	org	3145730
  2462  300002  1F                 	db	31
  2463                           
  2464                           ;Config register CONFIG2H @ 0x300003
  2465                           ;	Watchdog Timer Enable bit
  2466                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2467                           ;	Watchdog Timer Postscale Select bits
  2468                           ;	WDTPS = 32768, 1:32768
  2469  300003                     	org	3145731
  2470  300003  1E                 	db	30
  2471                           
  2472                           ; Padding undefined space
  2473  300004                     	org	3145732
  2474  300004  FF                 	db	255
  2475                           
  2476                           ;Config register CONFIG3H @ 0x300005
  2477                           ;	CCP2 MUX bit
  2478                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2479                           ;	PORTB A/D Enable bit
  2480                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2481                           ;	Low-Power Timer1 Oscillator Enable bit
  2482                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2483                           ;	MCLR Pin Enable bit
  2484                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2485  300005                     	org	3145733
  2486  300005  81                 	db	129
  2487                           
  2488                           ;Config register CONFIG4L @ 0x300006
  2489                           ;	Stack Full/Underflow Reset Enable bit
  2490                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2491                           ;	Single-Supply ICSP Enable bit
  2492                           ;	LVP = OFF, Single-Supply ICSP disabled
  2493                           ;	Extended Instruction Set Enable bit
  2494                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2495                           ;	Background Debugger Enable bit
  2496                           ;	DEBUG = 0x1, unprogrammed default
  2497  300006                     	org	3145734
  2498  300006  81                 	db	129
  2499                           
  2500                           ; Padding undefined space
  2501  300007                     	org	3145735
  2502  300007  FF                 	db	255
  2503                           
  2504                           ;Config register CONFIG5L @ 0x300008
  2505                           ;	Code Protection bit
  2506                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2507                           ;	Code Protection bit
  2508                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2509                           ;	Code Protection bit
  2510                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2511                           ;	Code Protection bit
  2512                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2513  300008                     	org	3145736
  2514  300008  0F                 	db	15
  2515                           
  2516                           ;Config register CONFIG5H @ 0x300009
  2517                           ;	Boot Block Code Protection bit
  2518                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2519                           ;	Data EEPROM Code Protection bit
  2520                           ;	CPD = OFF, Data EEPROM not code-protected
  2521  300009                     	org	3145737
  2522  300009  C0                 	db	192
  2523                           
  2524                           ;Config register CONFIG6L @ 0x30000A
  2525                           ;	Write Protection bit
  2526                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2527                           ;	Write Protection bit
  2528                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2529                           ;	Write Protection bit
  2530                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2531                           ;	Write Protection bit
  2532                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2533  30000A                     	org	3145738
  2534  30000A  0F                 	db	15
  2535                           
  2536                           ;Config register CONFIG6H @ 0x30000B
  2537                           ;	Configuration Register Write Protection bit
  2538                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2539                           ;	Boot Block Write Protection bit
  2540                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2541                           ;	Data EEPROM Write Protection bit
  2542                           ;	WRTD = OFF, Data EEPROM not write-protected
  2543  30000B                     	org	3145739
  2544  30000B  E0                 	db	224
  2545                           
  2546                           ;Config register CONFIG7L @ 0x30000C
  2547                           ;	Table Read Protection bit
  2548                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2549                           ;	Table Read Protection bit
  2550                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2551                           ;	Table Read Protection bit
  2552                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2553                           ;	Table Read Protection bit
  2554                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2555  30000C                     	org	3145740
  2556  30000C  0F                 	db	15
  2557                           
  2558                           ;Config register CONFIG7H @ 0x30000D
  2559                           ;	Boot Block Table Read Protection bit
  2560                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2561  30000D                     	org	3145741
  2562  30000D  40                 	db	64
  2563                           tosu	equ	0xFFF
  2564                           tosh	equ	0xFFE
  2565                           tosl	equ	0xFFD
  2566                           stkptr	equ	0xFFC
  2567                           pclatu	equ	0xFFB
  2568                           pclath	equ	0xFFA
  2569                           pcl	equ	0xFF9
  2570                           tblptru	equ	0xFF8
  2571                           tblptrh	equ	0xFF7
  2572                           tblptrl	equ	0xFF6
  2573                           tablat	equ	0xFF5
  2574                           prodh	equ	0xFF4
  2575                           prodl	equ	0xFF3
  2576                           indf0	equ	0xFEF
  2577                           postinc0	equ	0xFEE
  2578                           postdec0	equ	0xFED
  2579                           preinc0	equ	0xFEC
  2580                           plusw0	equ	0xFEB
  2581                           fsr0h	equ	0xFEA
  2582                           fsr0l	equ	0xFE9
  2583                           wreg	equ	0xFE8
  2584                           indf1	equ	0xFE7
  2585                           postinc1	equ	0xFE6
  2586                           postdec1	equ	0xFE5
  2587                           preinc1	equ	0xFE4
  2588                           plusw1	equ	0xFE3
  2589                           fsr1h	equ	0xFE2
  2590                           fsr1l	equ	0xFE1
  2591                           bsr	equ	0xFE0
  2592                           indf2	equ	0xFDF
  2593                           postinc2	equ	0xFDE
  2594                           postdec2	equ	0xFDD
  2595                           preinc2	equ	0xFDC
  2596                           plusw2	equ	0xFDB
  2597                           fsr2h	equ	0xFDA
  2598                           fsr2l	equ	0xFD9
  2599                           status	equ	0xFD8

Data Sizes:
    Strings     8
    Constant    0
    Data        94
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     37      90
    BANK0           128      0      48
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    lcd_8bit_set_cursor@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8bit_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_8_bit_send_command@lcd(COMRAM[2]), lcd_2(COMRAM[10]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 2
		 -> lcd_4_bit_send_char_data@lcd(COMRAM[2]), lcd_4_bit_send_command@lcd(COMRAM[2]), 

    send_4bit_data@lcd	PTR const struct . size(2) Largest target is 2
		 -> lcd_4_bit_send_char_data@lcd(COMRAM[2]), lcd_4_bit_send_command@lcd(COMRAM[2]), 

    lcd_8_bit_send_string_position@str	PTR unsigned char  size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 

    lcd_8_bit_send_string_position@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8_bit_send_string@str	PTR unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[4]), 

    lcd_8_bit_send_string@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8_bit_send_data_position@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8_bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_8_bit_send_command@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(COMRAM[10]), lcd_1(COMRAM[6]), 

    lcd_8_bit_initialize@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(COMRAM[10]), 

    lcd_4_bit_send_command@lcd	PTR const struct . size(2) Largest target is 10
		 -> lcd_2(COMRAM[10]), lcd_1(COMRAM[6]), 

    gpio_pin_intialize@pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd_2.lcd_data(COMRAM[8]), lcd_2(COMRAM[10]), Relay_Initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd_4_bit_send_command@lcd.lcd_data(COMRAM[8]), lcd_4_bit_send_char_data@lcd.lcd_data(COMRAM[8]), lcd_1.lcd_data(COMRAM[8]), lcd_8_bit_send_command@lcd(COMRAM[2]), 
		 -> lcd_4_bit_send_char_data@lcd(COMRAM[2]), lcd_4_bit_send_command@lcd(COMRAM[2]), lcd_2.lcd_data(COMRAM[8]), lcd_2(COMRAM[10]), 
		 -> lcd_1(COMRAM[6]), Relay_Turn_OFF@pin_obj(COMRAM[1]), Relay_Turn_ON@pin_obj(COMRAM[1]), Relay_Initialize@pin_obj(COMRAM[1]), 
		 -> led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_direction_intialize@pin_config	PTR const struct . size(2) Largest target is 10
		 -> lcd_2.lcd_data(COMRAM[8]), lcd_2(COMRAM[10]), Relay_Initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISB(BITBIGSFRh[1]), 
		 -> TRISA(BITBIGSFRll[1]), 

    keypad_btn_values	PTR const unsigned char [4][4] size(3) Largest target is 65535
		 -> ROM(CODE[65535]), 


Critical Paths under _main in COMRAM

    _main->_lcd_8_bit_send_string_position
    _lcd_8_bit_send_string_position->_lcd_8bit_set_cursor
    _lcd_8_bit_send_string->_lcd_8_bit_send_char_data
    _lcd_8_bit_send_data_position->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_lcd_8_bit_send_char_data
    _lcd_8_bit_send_char_data->_lcd_8bit_send_enable_signal
    _lcd_4_bit_send_command->_lcd_4bit_send_enable_signal
    _lcd_4_bit_send_command->_send_4bit_data
    _send_4bit_data->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _ECU_Layer_initialize->_lcd_8_bit_initialize
    _lcd_8_bit_initialize->_lcd_8_bit_send_command
    _lcd_8_bit_send_command->_lcd_8bit_send_enable_signal
    _lcd_8bit_send_enable_signal->_gpio_pin_write_logic
    _gpio_pin_intialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  107819
             _application_initialize
             _lcd_4_bit_send_command
           _lcd_8_bit_send_char_data
       _lcd_8_bit_send_data_position
              _lcd_8_bit_send_string
     _lcd_8_bit_send_string_position
 ---------------------------------------------------------------------------------
 (1) _lcd_8_bit_send_string_position                       7     1      6   24149
                                             30 COMRAM     7     1      6
           _lcd_8_bit_send_char_data
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_8_bit_send_string                                5     1      4   11757
                                             23 COMRAM     5     1      4
           _lcd_8_bit_send_char_data
 ---------------------------------------------------------------------------------
 (1) _lcd_8_bit_send_data_position                         6     1      5   24126
                                             30 COMRAM     6     1      5
           _lcd_8_bit_send_char_data
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_set_cursor                                  7     3      4   12173
                                             23 COMRAM     7     3      4
           _lcd_8_bit_send_char_data
 ---------------------------------------------------------------------------------
 (3) _lcd_8_bit_send_char_data                             9     6      3   11491
                                             14 COMRAM     9     6      3
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (1) _lcd_4_bit_send_command                               4     1      3   17577
                                             14 COMRAM     4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
             _lcd_send_enable_signal
                     _send_4bit_data
 ---------------------------------------------------------------------------------
 (2) _send_4bit_data                                       4     1      3    5724
                                             10 COMRAM     4     1      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _lcd_send_enable_signal                               2     0      2       0
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_enable_signal                          4     2      2    5210
                                             10 COMRAM     4     2      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               0     0      0   18713
               _ECU_Layer_initialize
 ---------------------------------------------------------------------------------
 (2) _ECU_Layer_initialize                                 1     1      0   18713
               _lcd_8_bit_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_8_bit_initialize                                 6     4      2   18711
                                             23 COMRAM     6     4      2
                 _gpio_pin_intialize
             _lcd_8_bit_send_command
 ---------------------------------------------------------------------------------
 (4) _lcd_8_bit_send_command                               9     6      3   11648
                                             14 COMRAM     9     6      3
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_enable_signal                          4     2      2    5134
                                             10 COMRAM     4     2      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_intialize                                   4     2      2    6596
                                             10 COMRAM     4     2      2
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                10     7      3    4913
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_intialize                         9     7      2     407
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initialize
     _ECU_Layer_initialize
       _lcd_8_bit_initialize
         _gpio_pin_intialize
           _gpio_pin_direction_intialize
           _gpio_pin_write_logic
         _lcd_8_bit_send_command
           _gpio_pin_write_logic
           _lcd_8bit_send_enable_signal
             _gpio_pin_write_logic
   _lcd_4_bit_send_command
     _gpio_pin_write_logic
     _lcd_4bit_send_enable_signal
       _gpio_pin_write_logic
     _lcd_send_enable_signal
     _send_4bit_data
       _gpio_pin_write_logic
   _lcd_8_bit_send_char_data
     _gpio_pin_write_logic
     _lcd_8bit_send_enable_signal
   _lcd_8_bit_send_data_position
     _lcd_8_bit_send_char_data
     _lcd_8bit_set_cursor
       _lcd_8_bit_send_char_data
   _lcd_8_bit_send_string
     _lcd_8_bit_send_char_data
   _lcd_8_bit_send_string_position
     _lcd_8_bit_send_char_data
     _lcd_8bit_set_cursor

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      30       5       37.5%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     25      5A       1       70.9%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8A      39        0.0%
DATA                 0      0      8A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Nov 23 09:41:38 2023

         __end_of_lcd_8_bit_send_command 0090            __end_of_lcd_8_bit_send_string 0062  
                         _send_4bit_data 0000                                      l213 0142  
                                    l301 006C                                      l302 006C  
                                    l232 013A                                      l400 006C  
                                    l307 0004                                      l253 006A  
                                    l421 003A                                      l165 000C  
                                    l415 0066                                      l431 00A6  
                                    l418 003A                                      l339 0072  
                                    l372 008E                                      l365 0126  
                                    l384 0044                                      l392 0060  
                                    l379 008E                   _lcd_4_bit_send_command 0000  
                                    u900 0048                                      u901 0044  
                                    u930 0016                                      u914 0070  
                                    u931 0012                                      u915 006C  
                                    u940 0038                                      u924 00D2  
                                    u941 0034                                      u925 00CE  
                                    u880 0016                                      u881 0012  
                                    u970 0116                                      u954 0060  
                                    u890 0026                                      u971 0110  
                                    u955 005C                                      u891 0022  
                                    u980 0118                                      u964 00C2  
                                    u965 00BE                                      u990 0012  
                                    u991 000E      __end_of_lcd_4bit_send_enable_signal 003C  
            _lcd_4bit_send_enable_signal 0000                                      prod 0FF3  
                    led_initialize@F2881 0006                                      wreg 0FE8  
            __end_of_lcd_8bit_set_cursor 00A8                                     l2001 00E2  
                                   l2003 00F2                                     l2005 0102  
                                   l2101 0070                                     l2021 002E  
                                   l2013 0000                                     l2007 0112  
                                   l2031 006E                                     l2015 0004  
                                   l2111 001A                                     l2009 0124  
                                   l2041 0000                                     l2033 007E  
                                   l2017 0016                                     l2113 0034  
                                   l2105 0000                                     l2051 0048  
                                   l2043 0000                                     l2027 0032  
                                   l2035 008C                                     l2019 001E  
                                   l2131 003C                                     l2123 0000  
                                   l2115 004E                                     l2107 0000  
                                   l2061 0022                                     l2045 0000  
                                   l2029 006C                                     l2141 0000  
                                   l2133 0040                                     l2125 0004  
                                   l2117 0052                                     l2109 0012  
                                   l2039 0000                                     l2063 0038  
                                   l2055 0000                                     l2047 0016  
                                   l2071 000A                                     l2143 0012  
                                   l2135 005E                                     l2127 0016  
                                   l2119 006A                                     l2057 0000  
                                   l2049 002E                                     l2073 0022  
                                   l2081 00A4                                     l2145 001A  
                                   l2129 001E                                     l2059 0014  
                                   l2091 0000                                     l2075 003A  
                                   l2067 0000                                     l2147 0042  
                                   l2139 0000                                     l2093 0000  
                                   l2077 0052                                     l2069 0004  
                                   l2095 0012                                     l2079 006A  
                                   l2521 0122                                     l2089 0000  
                                   l2097 001A                                     l2441 0000  
                                   l2523 012A                                     l2099 0060  
                                   l2451 005C                                     l2443 0004  
                                   l1901 00A2                                     l2445 0014  
                                   l2519 007E                                     l2447 0030  
                                   l2439 0000                                     l1905 00FE  
                                   l1921 0022                                     l2449 0044  
                                   l1907 0140                                     l1931 0012  
                                   l1923 0038                                     l1915 0000  
                                   l1933 0034                                     l1917 0000  
                                   l1941 0000                                     l1871 0026  
                                   l1935 003C                                     l1927 0000  
                                   l1919 0014                                     l1943 0004  
                                   l1881 010E                                     l1873 0048  
                                   l1865 0000                                     l1937 0068  
                                   l1929 0000                                     l1961 007E  
                                   l1945 0016                                     l1891 0000  
                                   l1875 0050                                     l1883 0138  
                                   l1867 0004                                     l1955 0032  
                                   l1963 008C                                     l1947 001E  
                                   l1971 0016                                     l1893 0004  
                                   l1877 00B2                                     l1869 0016  
                                   l1957 006C                                     l1949 002E  
                                   l1981 0042                                     l1973 001E  
                                   l1895 0016                                     l1959 006E  
                                   l1991 008E                                     l1983 005E  
                                   l1975 003E                                     l1967 0000  
                                   l1897 0038                                     l1993 00AC  
                                   l1985 0060                                     l1969 0004  
                                   l1899 0040                                     l1995 00B2  
                                   l1987 0070                                     l1997 00C2  
                                   l1989 007E                                     l1999 00D2  
                                   STR_1 0001                                     STR_2 0005  
                                   u1000 0034                                     u1001 0030  
                                   u1010 0016                                     u1011 0012  
                                   u1100 0012                                     u1101 000E  
                                   u1030 007E                                     u1110 006A  
                                   u1031 007A                                     u1111 0066  
                                   u1024 005C                                     u1040 0016  
                                   u1120 0016                                     u1025 0058  
                                   u1041 0012                                     u1121 0012  
                                   u1050 0070                                     u1130 005E  
                                   u1051 006C                                     u1131 005A  
                                   u1060 0016                                     u1140 0012  
                                   u1061 0012                                     u1141 000E  
                                   u1080 007E                                     u1081 007A  
                                   u1090 0012                                     u1074 005C  
                                   u1091 000E                                     u1075 0058  
                                   _LATA 0F89                                     _LATB 0F8A  
                                   _LATC 0F8B                                     _LATD 0F8C  
                                   _LATE 0F8D                                     u1607 00AE  
                                   u1617 001A                                     u1577 001A  
                                   u1587 0076                                     u1597 0094  
          ??_lcd_4bit_send_enable_signal 000C                                     _main 0000  
                                   fsr2h 0FDA                                     indf2 0FDF  
                                   fsr1l 0FE1                                     fsr2l 0FD9  
                                   prodl 0FF3                                     start 0000* 
                           ___param_bank 0000                   __end_of_send_4bit_data 0068  
                   _gpio_pin_write_logic 0000                                    ?_main 0000  
               ??_application_initialize 001D                                    _PORTA 0F80  
                                  _PORTB 0F81                                    _PORTC 0F82  
                                  _PORTD 0F83                                    _PORTE 0F84  
                                  _TRISA 0F92                                    _TRISB 0F93  
                                  _TRISC 0F94                                    _TRISD 0F95  
                                  _TRISE 0F96                                    _lcd_1 0028  
                                  _lcd_2 001E                     _ECU_Layer_initialize 0000  
          lcd_8_bit_send_command@command 0010                                    tablat 0FF5  
                                  status 0FD8                          __initialization 0000  
                   _lcd_8_bit_initialize 0000                             __end_of_main 0074  
                  ?_gpio_pin_write_logic 0000                          ?_send_4bit_data 000A  
                 lcd_8bit_set_cursor@lcd 0017                   lcd_8bit_set_cursor@ret 001D  
                 lcd_8bit_set_cursor@row 0019                            _lat_registers 000A  
                                 ??_main 0025                            __activetblptr 0003  
                       led_turn_on@F2886 0005                    ?_ECU_Layer_initialize 0000  
       __end_of_lcd_8_bit_send_char_data 0090                      Relay_Turn_OFF@F2885 0000  
              lcd_4_bit_send_command@lcd 000E                lcd_4_bit_send_command@ret 0011  
                  ?_lcd_8_bit_initialize 0017                 ??_lcd_send_enable_signal 0000  
                                 clear_0 0046                                   isa$std 0001  
            lcd_8_bit_send_char_data@lcd 000E              lcd_8_bit_send_char_data@ret 0015  
                           __pdataCOMRAM 0000                             __mediumconst 0000* 
                                 tblptrh 0FF7                                   tblptrl 0FF6  
                                 tblptru 0FF8                               __accesstop 0000* 
                __end_of__initialization 004C                            ___rparam_used 0001  
                 ??_gpio_pin_write_logic 0003                           __pcstackCOMRAM 0000  
                           __pidataBANK0 0000                  ?_lcd_4_bit_send_command 000E  
                 ??_ECU_Layer_initialize 001D                   _application_initialize 0000  
                 ??_lcd_8_bit_initialize 0019                    Relay_Initialize@F2875 0002  
         __end_of_lcd_4_bit_send_command 0074                        led_turn_off@F2891 0004  
              ?_lcd_8_bit_send_char_data 000E                          led_toggle@F2896 0003  
                  _lcd_8_bit_send_string 0000      __end_of_lcd_8bit_send_enable_signal 003C  
            _lcd_8bit_send_enable_signal 0000            lcd_4_bit_send_command@command 0010  
         lcd_8bit_send_enable_signal@lcd 000A           lcd_8bit_send_enable_signal@ret 000D  
                         _tris_registers 0014            ??_lcd_8bit_send_enable_signal 000C  
                       ??_send_4bit_data 000D                                  __Hparam 0000  
                                __Lparam 0000                             __psmallconst 0000  
             __end_of_gpio_pin_intialize 006C                                  __pcinit 0000  
                                __ramtop 0000*                                 __ptext0 0000  
                                __ptext1 0000                                  __ptext2 0000  
                                __ptext3 0000                                  __ptext4 0000  
                                __ptext5 0000                                  __ptext6 0000  
                                __ptext7 0000                                  __ptext8 0000  
                                __ptext9 0000         ??_lcd_8_bit_send_string_position 0024  
        ?_lcd_8_bit_send_string_position 001E             lcd_8_bit_send_char_data@data 0010  
                 _lcd_send_enable_signal 0000*                    end_of_initialization 004C  
         ??_lcd_8_bit_send_data_position 0023                 ??_lcd_8_bit_send_command 0011  
                  gpio_pin_intialize@ret 000D                                  postdec1 0FE5  
                                postdec2 0FDD                                  postinc0 0FEE  
                                postinc2 0FDE                   ?_lcd_8_bit_send_string 0017  
   __end_of_gpio_pin_direction_intialize 0144             _gpio_pin_direction_intialize 0000  
                          __pidataCOMRAM 0000                        send_4bit_data@lcd 000A  
                      send_4bit_data@ret 000D                      start_initialization 0000  
           ?_lcd_4bit_send_enable_signal 000A            ?_gpio_pin_direction_intialize 0000  
                ?_application_initialize 0000                       Relay_Turn_ON@F2880 0001  
                            __pdataBANK0 0000                      _lcd_8bit_set_cursor 0000  
                            __pbssCOMRAM 0000       lcd_8_bit_initialize@l_data_counter 001B  
         __end_of_application_initialize 0006                     ?_lcd_8bit_set_cursor 0017  
         gpio_pin_write_logic@pin_config 0000          gpio_pin_direction_intialize@ret 0008  
              gpio_pin_write_logic@logic 0002                   _lcd_8_bit_send_command 0000  
                            __smallconst 0000*                 ?_lcd_send_enable_signal 0000  
                     _gpio_pin_intialize 0000                    ??_lcd_8bit_set_cursor 001B  
         ??_gpio_pin_direction_intialize 0002                      ?_gpio_pin_intialize 000A  
 __end_of_lcd_8_bit_send_string_position 006E           _lcd_8_bit_send_string_position 0000  
               _lcd_8_bit_send_char_data 0000                  ??_lcd_8_bit_send_string 001B  
                      _keypad_btn_values 0000                  lcd_8_bit_initialize@lcd 0017  
                lcd_8_bit_initialize@ret 001C                     ??_gpio_pin_intialize 000C  
              lcd_8bit_set_cursor@coulmn 001A                  gpio_pin_write_logic@ret 0009  
                              copy_data0 0014                                copy_data1 0034  
               ??_lcd_4_bit_send_command 0011                                 __Hrparam 0000* 
                               __Lrparam 0000*                lcd_8_bit_send_string@lcd 0017  
               lcd_8_bit_send_string@ret 001B                 lcd_8_bit_send_string@str 0019  
   __end_of_lcd_8_bit_send_data_position 0046             _lcd_8_bit_send_data_position 0000  
                  send_4bit_data@command 000C                                 __ptext10 0000  
                               __ptext11 0000                                 __ptext12 0000  
                               __ptext13 0000                                 __ptext14 0000  
                               __ptext15 0000                                 __ptext16 0000  
      lcd_8_bit_send_data_position@colum 0022  lcd_8_bit_send_command@l_command_counter 0016  
           gpio_pin_intialize@pin_config 000A      lcd_8_bit_send_string_position@colum 0023  
              lcd_8_bit_send_command@lcd 000E                lcd_8_bit_send_command@ret 0015  
                               isa$xinst 0000            ?_lcd_8_bit_send_data_position 001E  
           __end_of_gpio_pin_write_logic 013C             ?_lcd_8bit_send_enable_signal 000A  
         lcd_4bit_send_enable_signal@lcd 000A           lcd_4bit_send_enable_signal@ret 000D  
       lcd_8_bit_send_data_position@data 0020   gpio_pin_direction_intialize@pin_config 0000  
           __end_of_ECU_Layer_initialize 000E                  ?_lcd_8_bit_send_command 000E  
                         _port_registers 0000          lcd_8_bit_send_data_position@lcd 001E  
        lcd_8_bit_send_data_position@ret 0023          lcd_8_bit_send_data_position@row 0021  
      lcd_8_bit_send_string_position@lcd 001E             __end_of_lcd_8_bit_initialize 0128  
      lcd_8_bit_send_string_position@ret 0024        lcd_8_bit_send_string_position@row 0022  
      lcd_8_bit_send_string_position@str 0020               ??_lcd_8_bit_send_char_data 0011  
 lcd_8_bit_send_char_data@l_data_counter 0016  
